var search_data = {"index":{"searchIndex":["activesupport","testcase","addareaidtoroles","addloginidtosolicituds","addtiponotificacioneidtonotificaciones","addtiposeguimientoidtoseguimientos","adjunto","adjuntotest","adjuntoscontroller","adjuntoscontrollertest","adjuntoshelper","adjuntostest","applicationcable","channel","connection","applicationcontroller","applicationhelper","applicationjob","applicationmailer","applicationrecord","applicationsystemtestcase","area","areatest","areascontroller","areascontrollertest","areashelper","areastest","createadjuntos","createareas","createestados","createnotificaciones","createparametros","createpermisos","createroles","createseguimientos","createsolicituds","createtiponotificaciones","createtiposeguimientos","createtiposolicitudes","devisecreatelogins","estado","estadotest","estadoscontroller","estadoscontrollertest","estadoshelper","estadostest","exception_in_decode","login","logintest","modelopqr","application","notificacione","notificacionetest","notificacionescontroller","notificacionescontrollertest","notificacioneshelper","notificacionestest","object","pg","basictypemapbasedonresult","basictypemapforqueries","basictypemapforresults","warningtypemap","basictyperegistry","codermap","binarydecoder","boolean","bytea","float","integer","string","tobase64","binaryencoder","boolean","bytea","frombase64","int2","int4","int8","string","coder","binaryformatting","compositecoder","compositedecoder","compositeencoder","connection","connectionbad","constants","copycoder","copydecoder","copyencoder","error","invalidchangeofresultfields","invalidresultstatus","noresulterror","notallcopydataretrieved","result","servererror","simplecoder","simpledecoder","simpleencoder","testinghelpers","connstillusablematcher","textdecoder","array","boolean","bytea","copyrow","date","float","frombase64","identifier","integer","json","string","timestampwithtimezone","timestampwithouttimezone","textencoder","array","boolean","bytea","copyrow","date","float","identifier","integer","json","quotedliteral","string","timestampwithtimezone","timestampwithouttimezone","tobase64","typemap","defaulttypemappable","typemapallstrings","typemapbyclass","typemapbycolumn","typemapbymritype","typemapbyoid","typemapinruby","unabletosend","parametro","parametrotest","parametroscontroller","parametroscontrollertest","parametroshelper","parametrostest","permiso","permisotest","permisoscontroller","permisoscontrollertest","permisoshelper","permisostest","role","roletest","rolescontroller","rolescontrollertest","roleshelper","rolestest","seguimiento","seguimientotest","seguimientoscontroller","seguimientoscontrollertest","seguimientoshelper","seguimientostest","solicitud","solicitudtest","solicitudscontroller","solicitudscontrollertest","solicitudshelper","solicitudstest","tiponotificacione","tiponotificacionetest","tiponotificacionescontroller","tiponotificacionescontrollertest","tiponotificacioneshelper","tiponotificacionestest","tiposeguimiento","tiposeguimientotest","tiposeguimientoscontroller","tiposeguimientoscontrollertest","tiposeguimientoshelper","tiposeguimientostest","tiposolicitude","tiposolicitudetest","tiposolicitudescontroller","tiposolicitudescontrollertest","tiposolicitudeshelper","tiposolicitudestest","user","usertest","userscontroller","userscontrollertest","usershelper","userstest","welcomecontroller","welcomecontrollertest","welcomehelper","==()","[]()","[]()","[]()","[]=()","[]=()","add_coder()","adjunto_params()","alias_type()","ansi_code()","area_params()","array_encoders_by_klass()","array_type_map_for()","async_exec()","async_query()","autoclear?()","backend_pid()","block()","build_coder_maps()","build_column_map()","camelize()","can_exec_query?()","cancel()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","change()","check()","check_for_lingering_connections()","check_for_problems()","check_format_and_direction()","check_result()","clear()","cleared?()","client_encoding=()","close()","cmd_status()","cmd_tuples()","cmdtuples()","coder_by_name()","coder_by_name()","coder_by_oid()","coders()","coders()","coders()","coders()","colorize()","column_values()","conndefaults()","conndefaults()","conndefaults_hash()","conndefaults_hash()","connect()","connect_poll()","connect_start()","connection_needs_password()","connection_used_password()","conninfo()","conninfo_hash()","consume_input()","copy_data()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","db()","decode()","decode()","decode()","decode()","decode()","decode()","decode()","decoder_for_get_copy_data()","decoder_for_get_copy_data=()","default_type_map()","default_type_map=()","delimiter()","delimiter()","delimiter=()","delimiter=()","describe_portal()","describe_prepared()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","dup()","each()","each_row()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","elements_type=()","encode()","encode()","encode()","encode()","encode()","encode()","encoder_for_put_copy_data()","encoder_for_put_copy_data=()","encrypt_password()","encrypt_password()","error_field()","error_message()","error_message()","escape()","escape_bytea()","escape_bytea()","escape_identifier()","escape_literal()","escape_string()","escape_string()","estado_params()","exec()","exec_params()","exec_prepared()","external_encoding()","failure_message()","failure_message_when_negated()","fformat()","field_values()","fields()","finish()","finished?()","fit_to_copy_get()","fit_to_copy_get()","fit_to_query()","fit_to_query()","fit_to_result()","fit_to_result()","flush()","fmod()","fname()","fnumber()","format()","format=()","fsize()","ftable()","ftablecol()","ftype()","get_array_type()","get_client_encoding()","get_copy_data()","get_last_result()","get_result()","getisnull()","getlength()","getvalue()","host()","included()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","init_openssl()","init_ssl()","inspect()","inspect()","inspect()","inspect()","internal_encoding()","internal_encoding=()","is_busy()","isnonblocking()","isthreadsafe()","library_version()","lo_close()","lo_creat()","lo_create()","lo_export()","lo_import()","lo_lseek()","lo_open()","lo_read()","lo_seek()","lo_tell()","lo_truncate()","lo_unlink()","lo_write()","loclose()","locreat()","locreate()","loexport()","log_and_run()","loimport()","lolseek()","loopen()","loread()","loseek()","lotell()","lotruncate()","lounlink()","lowrite()","make_empty_pgresult()","map_types!()","marshal_dump()","marshal_load()","matches?()","max_rows_for_online_lookup()","max_rows_for_online_lookup=()","message()","needs_quotation=()","needs_quotation?()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","nfields()","nonblocking?()","notificacione_params()","notifies()","notifies_wait()","nparams()","ntuples()","null_string()","null_string=()","num_fields()","num_tuples()","oid()","oid=()","oid_value()","oids()","options()","parameter_status()","parametro_params()","paramtype()","parse_connect_args()","pass()","permiso_params()","ping()","populate_encoder_list()","port()","prepare()","protocol_version()","put_copy_data()","put_copy_end()","query()","quote_connstr()","quote_ident()","quote_ident()","quotelist()","register_type()","res_status()","reset()","reset_poll()","reset_start()","result_error_field()","result_error_message()","result_status()","result_typenames()","rm_coder()","role_params()","run()","seguimiento_params()","send_describe_portal()","send_describe_prepared()","send_prepare()","send_query()","send_query_prepared()","server_version()","set_adjunto()","set_area()","set_client_encoding()","set_default_encoding()","set_error_verbosity()","set_estado()","set_notice_processor()","set_notice_receiver()","set_notificacione()","set_parametro()","set_permiso()","set_role()","set_seguimiento()","set_single_row_mode()","set_solicitud()","set_tipo_notificacione()","set_tipo_seguimiento()","set_tipo_solicitude()","set_user()","setnonblocking()","setup_testing_db()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","socket()","socket_io()","solicitud_params()","ssl_attribute()","ssl_attribute_names()","ssl_attributes()","ssl_in_use?()","status()","still_be_usable()","stop_existing_postmasters()","stream_each()","stream_each_row()","supports_ranges?()","system!()","teardown_testing_db()","tipo_notificacione_params()","tipo_seguimiento_params()","tipo_solicitude_params()","to_h()","to_h()","to_h()","trace()","trace()","transaction()","transaction_status()","tty()","type_map()","type_map()","type_map=()","type_map=()","type_map_for_queries()","type_map_for_queries=()","type_map_for_results()","type_map_for_results=()","typecast_copy_get()","typecast_copy_get()","typecast_query_param()","typecast_query_param()","typecast_result_value()","typecast_result_value()","typecast_result_value()","unescape_bytea()","unescape_bytea()","untrace()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","update()","user()","user_params()","validate_login()","values()","version_string()","wait_for_notify()","with_default_type_map()","diagramadeestados.mdj","gemfile","gemfile.lock","readme","rakefile","manifest.js","adjuntos.coffee","application.js","areas.coffee","bootstrap.js.coffee","cable.js","estados.coffee","notificaciones.coffee","parametros.coffee","permisos.coffee","roles.coffee","seguimientos.coffee","solicituds.coffee","tipo_notificaciones.coffee","tipo_seguimientos.coffee","tipo_solicitudes.coffee","users.coffee","welcome.coffee","adjuntos.scss","application.css","areas.scss","bootstrap_and_overrides.css","bootstrap_and_overrides.css.less","estados.scss","flexboxgrid.css","notificaciones.scss","parametros.scss","permisos.scss","roles.scss","scaffolds.scss","seguimientos.scss","solicituds.scss","style.scss","tipo_notificaciones.scss","tipo_seguimientos.scss","tipo_solicitudes.scss","users.scss","welcome.scss","_adjunto.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_area.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_estado.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_notificacione.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_parametro.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_permiso.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_role.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_seguimiento.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_solicitud.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_tipo_notificacione.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_tipo_seguimiento.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_tipo_solicitude.json.jbuilder","index.json.jbuilder","show.json.jbuilder","_user.json.jbuilder","index.json.jbuilder","show.json.jbuilder","config.ru","credentials.yml.enc","master.key","development.log","package.json","404.html","422.html","500.html","apple-touch-icon-precomposed.png","apple-touch-icon.png","favicon.ico","robots","gem_make.out","mkmf.log","bsdl","changelog","contributors","history","license","manifest","postgres","readme-os_x","readme-windows","readme.ja","readme","rakefile","rakefile.cross","errorcodes.def","errorcodes","pg.sln","pg.vcproj","pg_19.vcproj","expected_trace.out","restart"],"longSearchIndex":["activesupport","activesupport::testcase","addareaidtoroles","addloginidtosolicituds","addtiponotificacioneidtonotificaciones","addtiposeguimientoidtoseguimientos","adjunto","adjuntotest","adjuntoscontroller","adjuntoscontrollertest","adjuntoshelper","adjuntostest","applicationcable","applicationcable::channel","applicationcable::connection","applicationcontroller","applicationhelper","applicationjob","applicationmailer","applicationrecord","applicationsystemtestcase","area","areatest","areascontroller","areascontrollertest","areashelper","areastest","createadjuntos","createareas","createestados","createnotificaciones","createparametros","createpermisos","createroles","createseguimientos","createsolicituds","createtiponotificaciones","createtiposeguimientos","createtiposolicitudes","devisecreatelogins","estado","estadotest","estadoscontroller","estadoscontrollertest","estadoshelper","estadostest","exception_in_decode","login","logintest","modelopqr","modelopqr::application","notificacione","notificacionetest","notificacionescontroller","notificacionescontrollertest","notificacioneshelper","notificacionestest","object","pg","pg::basictypemapbasedonresult","pg::basictypemapforqueries","pg::basictypemapforresults","pg::basictypemapforresults::warningtypemap","pg::basictyperegistry","pg::basictyperegistry::codermap","pg::binarydecoder","pg::binarydecoder::boolean","pg::binarydecoder::bytea","pg::binarydecoder::float","pg::binarydecoder::integer","pg::binarydecoder::string","pg::binarydecoder::tobase64","pg::binaryencoder","pg::binaryencoder::boolean","pg::binaryencoder::bytea","pg::binaryencoder::frombase64","pg::binaryencoder::int2","pg::binaryencoder::int4","pg::binaryencoder::int8","pg::binaryencoder::string","pg::coder","pg::coder::binaryformatting","pg::compositecoder","pg::compositedecoder","pg::compositeencoder","pg::connection","pg::connectionbad","pg::constants","pg::copycoder","pg::copydecoder","pg::copyencoder","pg::error","pg::invalidchangeofresultfields","pg::invalidresultstatus","pg::noresulterror","pg::notallcopydataretrieved","pg::result","pg::servererror","pg::simplecoder","pg::simpledecoder","pg::simpleencoder","pg::testinghelpers","pg::testinghelpers::connstillusablematcher","pg::textdecoder","pg::textdecoder::array","pg::textdecoder::boolean","pg::textdecoder::bytea","pg::textdecoder::copyrow","pg::textdecoder::date","pg::textdecoder::float","pg::textdecoder::frombase64","pg::textdecoder::identifier","pg::textdecoder::integer","pg::textdecoder::json","pg::textdecoder::string","pg::textdecoder::timestampwithtimezone","pg::textdecoder::timestampwithouttimezone","pg::textencoder","pg::textencoder::array","pg::textencoder::boolean","pg::textencoder::bytea","pg::textencoder::copyrow","pg::textencoder::date","pg::textencoder::float","pg::textencoder::identifier","pg::textencoder::integer","pg::textencoder::json","pg::textencoder::quotedliteral","pg::textencoder::string","pg::textencoder::timestampwithtimezone","pg::textencoder::timestampwithouttimezone","pg::textencoder::tobase64","pg::typemap","pg::typemap::defaulttypemappable","pg::typemapallstrings","pg::typemapbyclass","pg::typemapbycolumn","pg::typemapbymritype","pg::typemapbyoid","pg::typemapinruby","pg::unabletosend","parametro","parametrotest","parametroscontroller","parametroscontrollertest","parametroshelper","parametrostest","permiso","permisotest","permisoscontroller","permisoscontrollertest","permisoshelper","permisostest","role","roletest","rolescontroller","rolescontrollertest","roleshelper","rolestest","seguimiento","seguimientotest","seguimientoscontroller","seguimientoscontrollertest","seguimientoshelper","seguimientostest","solicitud","solicitudtest","solicitudscontroller","solicitudscontrollertest","solicitudshelper","solicitudstest","tiponotificacione","tiponotificacionetest","tiponotificacionescontroller","tiponotificacionescontrollertest","tiponotificacioneshelper","tiponotificacionestest","tiposeguimiento","tiposeguimientotest","tiposeguimientoscontroller","tiposeguimientoscontrollertest","tiposeguimientoshelper","tiposeguimientostest","tiposolicitude","tiposolicitudetest","tiposolicitudescontroller","tiposolicitudescontrollertest","tiposolicitudeshelper","tiposolicitudestest","user","usertest","userscontroller","userscontrollertest","usershelper","userstest","welcomecontroller","welcomecontrollertest","welcomehelper","pg::coder#==()","pg::result#[]()","pg::typemapbyclass#[]()","pg::typemapbymritype#[]()","pg::typemapbyclass#[]=()","pg::typemapbymritype#[]=()","pg::typemapbyoid#add_coder()","adjuntoscontroller#adjunto_params()","pg::basictyperegistry::alias_type()","pg::testinghelpers#ansi_code()","areascontroller#area_params()","pg::basictypemapforqueries#array_encoders_by_klass()","object#array_type_map_for()","pg::connection#async_exec()","pg::connection#async_query()","pg::result#autoclear?()","pg::connection#backend_pid()","pg::connection#block()","pg::basictyperegistry#build_coder_maps()","pg::typemapbyoid#build_column_map()","object#camelize()","pg::testinghelpers::connstillusablematcher#can_exec_query?()","pg::connection#cancel()","addareaidtoroles#change()","addloginidtosolicituds#change()","addtiponotificacioneidtonotificaciones#change()","addtiposeguimientoidtoseguimientos#change()","createadjuntos#change()","createareas#change()","createestados#change()","createnotificaciones#change()","createparametros#change()","createpermisos#change()","createroles#change()","createseguimientos#change()","createsolicituds#change()","createtiponotificaciones#change()","createtiposeguimientos#change()","createtiposolicitudes#change()","devisecreatelogins#change()","pg::result#check()","pg::testinghelpers#check_for_lingering_connections()","pg::testinghelpers::connstillusablematcher#check_for_problems()","pg::basictyperegistry#check_format_and_direction()","pg::result#check_result()","pg::result#clear()","pg::result#cleared?()","pg::connection#client_encoding=()","pg::connection#close()","pg::result#cmd_status()","pg::result#cmd_tuples()","pg::result#cmdtuples()","pg::basictypemapforqueries#coder_by_name()","pg::basictyperegistry::codermap#coder_by_name()","pg::basictyperegistry::codermap#coder_by_oid()","pg::typemapbyclass#coders()","pg::typemapbycolumn#coders()","pg::typemapbymritype#coders()","pg::typemapbyoid#coders()","pg::testinghelpers#colorize()","pg::result#column_values()","pg::connection::conndefaults()","pg::connection#conndefaults()","pg::connection::conndefaults_hash()","pg::connection#conndefaults_hash()","pg::connect()","pg::connection#connect_poll()","pg::connection::connect_start()","pg::connection#connection_needs_password()","pg::connection#connection_used_password()","pg::connection#conninfo()","pg::connection#conninfo_hash()","pg::connection#consume_input()","pg::connection#copy_data()","adjuntoscontroller#create()","areascontroller#create()","estadoscontroller#create()","notificacionescontroller#create()","parametroscontroller#create()","permisoscontroller#create()","rolescontroller#create()","seguimientoscontroller#create()","solicitudscontroller#create()","tiponotificacionescontroller#create()","tiposeguimientoscontroller#create()","tiposolicitudescontroller#create()","userscontroller#create()","pg::connection#db()","exception_in_decode#decode()","object#decode()","pg::coder#decode()","pg::textdecoder::date#decode()","pg::textdecoder::json#decode()","pg::textdecoder::timestampwithtimezone#decode()","pg::textdecoder::timestampwithouttimezone#decode()","pg::connection#decoder_for_get_copy_data()","pg::connection#decoder_for_get_copy_data=()","pg::typemap::defaulttypemappable#default_type_map()","pg::typemap::defaulttypemappable#default_type_map=()","pg::compositecoder#delimiter()","pg::copycoder#delimiter()","pg::compositecoder#delimiter=()","pg::copycoder#delimiter=()","pg::connection#describe_portal()","pg::connection#describe_prepared()","adjuntoscontroller#destroy()","areascontroller#destroy()","estadoscontroller#destroy()","notificacionescontroller#destroy()","parametroscontroller#destroy()","permisoscontroller#destroy()","rolescontroller#destroy()","seguimientoscontroller#destroy()","solicitudscontroller#destroy()","tiponotificacionescontroller#destroy()","tiposeguimientoscontroller#destroy()","tiposolicitudescontroller#destroy()","userscontroller#destroy()","pg::coder#dup()","pg::result#each()","pg::result#each_row()","adjuntoscontroller#edit()","areascontroller#edit()","estadoscontroller#edit()","notificacionescontroller#edit()","parametroscontroller#edit()","permisoscontroller#edit()","rolescontroller#edit()","seguimientoscontroller#edit()","solicitudscontroller#edit()","tiponotificacionescontroller#edit()","tiposeguimientoscontroller#edit()","tiposolicitudescontroller#edit()","userscontroller#edit()","pg::compositecoder#elements_type=()","object#encode()","pg::coder#encode()","pg::textencoder::date#encode()","pg::textencoder::json#encode()","pg::textencoder::timestampwithtimezone#encode()","pg::textencoder::timestampwithouttimezone#encode()","pg::connection#encoder_for_put_copy_data()","pg::connection#encoder_for_put_copy_data=()","pg::connection::encrypt_password()","pg::connection#encrypt_password()","pg::result#error_field()","pg::connection#error_message()","pg::result#error_message()","pg::connection#escape()","pg::connection::escape_bytea()","pg::connection#escape_bytea()","pg::connection#escape_identifier()","pg::connection#escape_literal()","pg::connection::escape_string()","pg::connection#escape_string()","estadoscontroller#estado_params()","pg::connection#exec()","pg::connection#exec_params()","pg::connection#exec_prepared()","pg::connection#external_encoding()","pg::testinghelpers::connstillusablematcher#failure_message()","pg::testinghelpers::connstillusablematcher#failure_message_when_negated()","pg::result#fformat()","pg::result#field_values()","pg::result#fields()","pg::connection#finish()","pg::connection#finished?()","object#fit_to_copy_get()","pg::typemapinruby#fit_to_copy_get()","object#fit_to_query()","pg::typemapinruby#fit_to_query()","object#fit_to_result()","pg::typemapinruby#fit_to_result()","pg::connection#flush()","pg::result#fmod()","pg::result#fname()","pg::result#fnumber()","pg::coder#format()","pg::coder#format=()","pg::result#fsize()","pg::result#ftable()","pg::result#ftablecol()","pg::result#ftype()","pg::basictypemapforqueries#get_array_type()","pg::connection#get_client_encoding()","pg::connection#get_copy_data()","pg::connection#get_last_result()","pg::connection#get_result()","pg::result#getisnull()","pg::result#getlength()","pg::result#getvalue()","pg::connection#host()","pg::testinghelpers::included()","adjuntoscontroller#index()","areascontroller#index()","estadoscontroller#index()","notificacionescontroller#index()","parametroscontroller#index()","permisoscontroller#index()","rolescontroller#index()","seguimientoscontroller#index()","solicitudscontroller#index()","tiponotificacionescontroller#index()","tiposeguimientoscontroller#index()","tiposolicitudescontroller#index()","userscontroller#index()","welcomecontroller#index()","pg::init_openssl()","pg::init_ssl()","pg::coder#inspect()","pg::compositecoder#inspect()","pg::result#inspect()","pg::typemapbycolumn#inspect()","pg::connection#internal_encoding()","pg::connection#internal_encoding=()","pg::connection#is_busy()","pg::connection#isnonblocking()","pg::isthreadsafe()","pg::library_version()","pg::connection#lo_close()","pg::connection#lo_creat()","pg::connection#lo_create()","pg::connection#lo_export()","pg::connection#lo_import()","pg::connection#lo_lseek()","pg::connection#lo_open()","pg::connection#lo_read()","pg::connection#lo_seek()","pg::connection#lo_tell()","pg::connection#lo_truncate()","pg::connection#lo_unlink()","pg::connection#lo_write()","pg::connection#loclose()","pg::connection#locreat()","pg::connection#locreate()","pg::connection#loexport()","pg::testinghelpers#log_and_run()","pg::connection#loimport()","pg::connection#lolseek()","pg::connection#loopen()","pg::connection#loread()","pg::connection#loseek()","pg::connection#lotell()","pg::connection#lotruncate()","pg::connection#lounlink()","pg::connection#lowrite()","pg::connection#make_empty_pgresult()","pg::result#map_types!()","pg::coder#marshal_dump()","pg::coder#marshal_load()","pg::testinghelpers::connstillusablematcher#matches?()","pg::typemapbyoid#max_rows_for_online_lookup()","pg::typemapbyoid#max_rows_for_online_lookup=()","pg::testinghelpers#message()","pg::compositecoder#needs_quotation=()","pg::compositecoder#needs_quotation?()","adjuntoscontroller#new()","areascontroller#new()","estadoscontroller#new()","notificacionescontroller#new()","object::new()","pg::basictypemapbasedonresult::new()","pg::basictypemapforqueries::new()","pg::basictypemapforresults::new()","pg::basictypemapforresults::warningtypemap::new()","pg::basictyperegistry::codermap::new()","pg::coder::new()","pg::coder::binaryformatting::new()","pg::connection::new()","pg::testinghelpers::connstillusablematcher::new()","pg::typemapbycolumn::new()","parametroscontroller#new()","permisoscontroller#new()","rolescontroller#new()","seguimientoscontroller#new()","solicitudscontroller#new()","tiponotificacionescontroller#new()","tiposeguimientoscontroller#new()","tiposolicitudescontroller#new()","userscontroller#new()","pg::result#nfields()","pg::connection#nonblocking?()","notificacionescontroller#notificacione_params()","pg::connection#notifies()","pg::connection#notifies_wait()","pg::result#nparams()","pg::result#ntuples()","pg::copycoder#null_string()","pg::copycoder#null_string=()","pg::result#num_fields()","pg::result#num_tuples()","pg::coder#oid()","pg::coder#oid=()","pg::result#oid_value()","pg::typemapbycolumn#oids()","pg::connection#options()","pg::connection#parameter_status()","parametroscontroller#parametro_params()","pg::result#paramtype()","pg::connection::parse_connect_args()","pg::connection#pass()","permisoscontroller#permiso_params()","pg::connection::ping()","pg::basictypemapforqueries#populate_encoder_list()","pg::connection#port()","pg::connection#prepare()","pg::connection#protocol_version()","pg::connection#put_copy_data()","pg::connection#put_copy_end()","pg::connection#query()","pg::connection::quote_connstr()","pg::connection::quote_ident()","pg::connection#quote_ident()","pg::testinghelpers#quotelist()","pg::basictyperegistry::register_type()","pg::result#res_status()","pg::connection#reset()","pg::connection#reset_poll()","pg::connection#reset_start()","pg::result#result_error_field()","pg::result#result_error_message()","pg::result#result_status()","pg::testinghelpers#result_typenames()","pg::typemapbyoid#rm_coder()","rolescontroller#role_params()","pg::testinghelpers#run()","seguimientoscontroller#seguimiento_params()","pg::connection#send_describe_portal()","pg::connection#send_describe_prepared()","pg::connection#send_prepare()","pg::connection#send_query()","pg::connection#send_query_prepared()","pg::connection#server_version()","adjuntoscontroller#set_adjunto()","areascontroller#set_area()","pg::connection#set_client_encoding()","pg::connection#set_default_encoding()","pg::connection#set_error_verbosity()","estadoscontroller#set_estado()","pg::connection#set_notice_processor()","pg::connection#set_notice_receiver()","notificacionescontroller#set_notificacione()","parametroscontroller#set_parametro()","permisoscontroller#set_permiso()","rolescontroller#set_role()","seguimientoscontroller#set_seguimiento()","pg::connection#set_single_row_mode()","solicitudscontroller#set_solicitud()","tiponotificacionescontroller#set_tipo_notificacione()","tiposeguimientoscontroller#set_tipo_seguimiento()","tiposolicitudescontroller#set_tipo_solicitude()","userscontroller#set_user()","pg::connection#setnonblocking()","pg::testinghelpers#setup_testing_db()","adjuntoscontroller#show()","areascontroller#show()","estadoscontroller#show()","notificacionescontroller#show()","parametroscontroller#show()","permisoscontroller#show()","rolescontroller#show()","seguimientoscontroller#show()","solicitudscontroller#show()","tiponotificacionescontroller#show()","tiposeguimientoscontroller#show()","tiposolicitudescontroller#show()","userscontroller#show()","pg::connection#socket()","pg::connection#socket_io()","solicitudscontroller#solicitud_params()","pg::connection#ssl_attribute()","pg::connection#ssl_attribute_names()","pg::connection#ssl_attributes()","pg::connection#ssl_in_use?()","pg::connection#status()","pg::testinghelpers#still_be_usable()","pg::testinghelpers#stop_existing_postmasters()","pg::result#stream_each()","pg::result#stream_each_row()","pg::basictyperegistry#supports_ranges?()","object#system!()","pg::testinghelpers#teardown_testing_db()","tiponotificacionescontroller#tipo_notificacione_params()","tiposeguimientoscontroller#tipo_seguimiento_params()","tiposolicitudescontroller#tipo_solicitude_params()","pg::coder#to_h()","pg::compositecoder#to_h()","pg::copycoder#to_h()","pg::connection#trace()","pg::testinghelpers#trace()","pg::connection#transaction()","pg::connection#transaction_status()","pg::connection#tty()","pg::copycoder#type_map()","pg::result#type_map()","pg::copycoder#type_map=()","pg::result#type_map=()","pg::connection#type_map_for_queries()","pg::connection#type_map_for_queries=()","pg::connection#type_map_for_results()","pg::connection#type_map_for_results=()","object#typecast_copy_get()","pg::typemapinruby#typecast_copy_get()","object#typecast_query_param()","pg::typemapinruby#typecast_query_param()","object#typecast_result_value()","pg::basictypemapforresults::warningtypemap#typecast_result_value()","pg::typemapinruby#typecast_result_value()","pg::connection::unescape_bytea()","pg::connection#unescape_bytea()","pg::connection#untrace()","adjuntoscontroller#update()","areascontroller#update()","estadoscontroller#update()","notificacionescontroller#update()","parametroscontroller#update()","permisoscontroller#update()","rolescontroller#update()","seguimientoscontroller#update()","solicitudscontroller#update()","tiponotificacionescontroller#update()","tiposeguimientoscontroller#update()","tiposolicitudescontroller#update()","userscontroller#update()","pg::connection#user()","userscontroller#user_params()","solicitudscontroller#validate_login()","pg::result#values()","pg::version_string()","pg::connection#wait_for_notify()","pg::typemap::defaulttypemappable#with_default_type_map()","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"info":[["ActiveSupport","","ActiveSupport.html","",""],["ActiveSupport::TestCase","","ActiveSupport/TestCase.html","",""],["AddAreaIdToRoles","","AddAreaIdToRoles.html","",""],["AddLoginIdToSolicituds","","AddLoginIdToSolicituds.html","",""],["AddTipoNotificacioneIdToNotificaciones","","AddTipoNotificacioneIdToNotificaciones.html","",""],["AddTipoSeguimientoIdToSeguimientos","","AddTipoSeguimientoIdToSeguimientos.html","",""],["Adjunto","","Adjunto.html","",""],["AdjuntoTest","","AdjuntoTest.html","",""],["AdjuntosController","","AdjuntosController.html","",""],["AdjuntosControllerTest","","AdjuntosControllerTest.html","",""],["AdjuntosHelper","","AdjuntosHelper.html","",""],["AdjuntosTest","","AdjuntosTest.html","",""],["ApplicationCable","","ApplicationCable.html","",""],["ApplicationCable::Channel","","ApplicationCable/Channel.html","",""],["ApplicationCable::Connection","","ApplicationCable/Connection.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["ApplicationJob","","ApplicationJob.html","",""],["ApplicationMailer","","ApplicationMailer.html","",""],["ApplicationRecord","","ApplicationRecord.html","",""],["ApplicationSystemTestCase","","ApplicationSystemTestCase.html","",""],["Area","","Area.html","",""],["AreaTest","","AreaTest.html","",""],["AreasController","","AreasController.html","",""],["AreasControllerTest","","AreasControllerTest.html","",""],["AreasHelper","","AreasHelper.html","",""],["AreasTest","","AreasTest.html","",""],["CreateAdjuntos","","CreateAdjuntos.html","",""],["CreateAreas","","CreateAreas.html","",""],["CreateEstados","","CreateEstados.html","",""],["CreateNotificaciones","","CreateNotificaciones.html","",""],["CreateParametros","","CreateParametros.html","",""],["CreatePermisos","","CreatePermisos.html","",""],["CreateRoles","","CreateRoles.html","",""],["CreateSeguimientos","","CreateSeguimientos.html","",""],["CreateSolicituds","","CreateSolicituds.html","",""],["CreateTipoNotificaciones","","CreateTipoNotificaciones.html","",""],["CreateTipoSeguimientos","","CreateTipoSeguimientos.html","",""],["CreateTipoSolicitudes","","CreateTipoSolicitudes.html","",""],["DeviseCreateLogins","","DeviseCreateLogins.html","",""],["Estado","","Estado.html","",""],["EstadoTest","","EstadoTest.html","",""],["EstadosController","","EstadosController.html","",""],["EstadosControllerTest","","EstadosControllerTest.html","",""],["EstadosHelper","","EstadosHelper.html","",""],["EstadosTest","","EstadosTest.html","",""],["Exception_in_decode","","Exception_in_decode.html","","<p>Decoding Examples\n"],["Login","","Login.html","",""],["LoginTest","","LoginTest.html","",""],["ModeloPQR","","ModeloPQR.html","",""],["ModeloPQR::Application","","ModeloPQR/Application.html","",""],["Notificacione","","Notificacione.html","",""],["NotificacioneTest","","NotificacioneTest.html","",""],["NotificacionesController","","NotificacionesController.html","",""],["NotificacionesControllerTest","","NotificacionesControllerTest.html","",""],["NotificacionesHelper","","NotificacionesHelper.html","",""],["NotificacionesTest","","NotificacionesTest.html","",""],["Object","","Object.html","",""],["PG","","PG.html","","<p>The top-level PG namespace.\n"],["PG::BasicTypeMapBasedOnResult","","PG/BasicTypeMapBasedOnResult.html","","<p>Simple set of rules for type casting common PostgreSQL types from Ruby to\nPostgreSQL.\n<p>OIDs of supported …\n"],["PG::BasicTypeMapForQueries","","PG/BasicTypeMapForQueries.html","","<p>Simple set of rules for type casting common Ruby types to PostgreSQL.\n<p>OIDs of supported type casts are …\n"],["PG::BasicTypeMapForResults","","PG/BasicTypeMapForResults.html","","<p>Simple set of rules for type casting common PostgreSQL types to Ruby.\n<p>OIDs of supported type casts are …\n"],["PG::BasicTypeMapForResults::WarningTypeMap","","PG/BasicTypeMapForResults/WarningTypeMap.html","",""],["PG::BasicTypeRegistry","","PG/BasicTypeRegistry.html","",""],["PG::BasicTypeRegistry::CoderMap","","PG/BasicTypeRegistry/CoderMap.html","","<p>An instance of this class stores the coders that should be used for a given\nwire format (text or binary) …\n"],["PG::BinaryDecoder","","PG/BinaryDecoder.html","","<p>This module encapsulates all decoder classes with binary input format\n"],["PG::BinaryDecoder::Boolean","","PG/BinaryDecoder/Boolean.html","","<p>This is a decoder class for conversion of PostgreSQL binary bool type to\nRuby true or false objects. …\n"],["PG::BinaryDecoder::Bytea","","PG/BinaryDecoder/Bytea.html","","<p>This decoder class delivers the data received from the server as binary\nString object. It is therefore …\n"],["PG::BinaryDecoder::Float","","PG/BinaryDecoder/Float.html","","<p>This is a decoder class for conversion of PostgreSQL binary float4 and\nfloat8 types to Ruby Float objects. …\n"],["PG::BinaryDecoder::Integer","","PG/BinaryDecoder/Integer.html","","<p>This is a decoder class for conversion of PostgreSQL binary int2, int4 and\nint8 types to Ruby Integer …\n"],["PG::BinaryDecoder::String","","PG/BinaryDecoder/String.html","","<p>This is a decoder class for conversion of PostgreSQL text output to to Ruby\nString object. The output …\n"],["PG::BinaryDecoder::ToBase64","","PG/BinaryDecoder/ToBase64.html","","<p>This is a decoder class for conversion of binary (bytea) to base64 data.\n"],["PG::BinaryEncoder","","PG/BinaryEncoder.html","","<p>This module encapsulates all encoder classes with binary output format\n"],["PG::BinaryEncoder::Boolean","","PG/BinaryEncoder/Boolean.html","","<p>This is the encoder class for the PostgreSQL boolean type.\n<p>It accepts true and false. Other values will …\n"],["PG::BinaryEncoder::Bytea","","PG/BinaryEncoder/Bytea.html","",""],["PG::BinaryEncoder::FromBase64","","PG/BinaryEncoder/FromBase64.html","","<p>This is an encoder class for conversion of base64 encoded data to it&#39;s\nbinary representation.\n"],["PG::BinaryEncoder::Int2","","PG/BinaryEncoder/Int2.html","","<p>This is the encoder class for the PostgreSQL int2 type.\n<p>Non-Number values are expected to have method …\n"],["PG::BinaryEncoder::Int4","","PG/BinaryEncoder/Int4.html","",""],["PG::BinaryEncoder::Int8","","PG/BinaryEncoder/Int8.html","",""],["PG::BinaryEncoder::String","","PG/BinaryEncoder/String.html","",""],["PG::Coder","","PG/Coder.html","","<p>This is the base class for all type cast encoder and decoder classes.\n<p>It can be used for implicit type …\n"],["PG::Coder::BinaryFormatting","","PG/Coder/BinaryFormatting.html","",""],["PG::CompositeCoder","","PG/CompositeCoder.html","","<p>This is the base class for all type cast classes of PostgreSQL types, that\nare made up of some sub type. …\n"],["PG::CompositeDecoder","","PG/CompositeDecoder.html","","<p>Document-class: PG::CompositeDecoder &lt; PG::CompositeCoder\n"],["PG::CompositeEncoder","","PG/CompositeEncoder.html","","<p>Document-class: PG::CompositeEncoder &lt; PG::CompositeCoder\n"],["PG::Connection","","PG/Connection.html","","<p>The PostgreSQL connection class. The interface for this class is based on\nlibpq, the C application programmer&#39;s …\n"],["PG::ConnectionBad","","PG/ConnectionBad.html","",""],["PG::Constants","","PG/Constants.html","",""],["PG::CopyCoder","","PG/CopyCoder.html","","<p>This is the base class for all type cast classes for COPY data,\n"],["PG::CopyDecoder","","PG/CopyDecoder.html","","<p>Document-class: PG::CopyDecoder &lt; PG::CopyCoder\n"],["PG::CopyEncoder","","PG/CopyEncoder.html","","<p>Document-class: PG::CopyEncoder &lt; PG::CopyCoder\n"],["PG::Error","","PG/Error.html","",""],["PG::InvalidChangeOfResultFields","","PG/InvalidChangeOfResultFields.html","",""],["PG::InvalidResultStatus","","PG/InvalidResultStatus.html","",""],["PG::NoResultError","","PG/NoResultError.html","",""],["PG::NotAllCopyDataRetrieved","","PG/NotAllCopyDataRetrieved.html","",""],["PG::Result","","PG/Result.html","","<p>The class to represent the query result tuples (rows). An instance of this\nclass is created as the result …\n"],["PG::ServerError","","PG/ServerError.html","",""],["PG::SimpleCoder","","PG/SimpleCoder.html","","<p>Document-class: PG::SimpleCoder &lt; PG::Coder\n"],["PG::SimpleDecoder","","PG/SimpleDecoder.html","","<p>Document-class: PG::SimpleDecoder &lt; PG::SimpleCoder\n"],["PG::SimpleEncoder","","PG/SimpleEncoder.html","","<p>Document-class: PG::SimpleEncoder &lt; PG::SimpleCoder\n"],["PG::TestingHelpers","","PG/TestingHelpers.html","",""],["PG::TestingHelpers::ConnStillUsableMatcher","","PG/TestingHelpers/ConnStillUsableMatcher.html","","<p>A matcher for checking the status of a PG::Connection to ensure it&#39;s\nstill usable.\n"],["PG::TextDecoder","","PG/TextDecoder.html","","<p>This module encapsulates all decoder classes with text input format\n"],["PG::TextDecoder::Array","","PG/TextDecoder/Array.html","","<p>This is the decoder class for PostgreSQL array types.\n<p>All values are decoded according to the #elements_type …\n"],["PG::TextDecoder::Boolean","","PG/TextDecoder/Boolean.html","","<p>This is a decoder class for conversion of PostgreSQL boolean type to Ruby\ntrue or false values.\n"],["PG::TextDecoder::Bytea","","PG/TextDecoder/Bytea.html","","<p>This is a decoder class for conversion of PostgreSQL bytea type to binary\nString objects.\n"],["PG::TextDecoder::CopyRow","","PG/TextDecoder/CopyRow.html","","<p>This class decodes one row of arbitrary columns received as COPY data in\ntext format. See the COPY command …\n"],["PG::TextDecoder::Date","","PG/TextDecoder/Date.html","",""],["PG::TextDecoder::Float","","PG/TextDecoder/Float.html","","<p>This is a decoder class for conversion of PostgreSQL float4 and float8\ntypes to Ruby Float objects.\n"],["PG::TextDecoder::FromBase64","","PG/TextDecoder/FromBase64.html","","<p>This is a decoder class for conversion of base64 encoded data to it&#39;s\nbinary representation. It outputs …\n"],["PG::TextDecoder::Identifier","","PG/TextDecoder/Identifier.html","","<p>This is the decoder class for PostgreSQL identifiers.\n<p>Returns an Array of identifiers:\n\n<pre>PG::TextDecoder::Identifier.new.decode(&#39;schema.&quot;table&quot;.&quot;column&quot;&#39;) ...</pre>\n"],["PG::TextDecoder::Integer","","PG/TextDecoder/Integer.html","","<p>This is a decoder class for conversion of PostgreSQL integer types to Ruby\nInteger objects.\n"],["PG::TextDecoder::JSON","","PG/TextDecoder/JSON.html","",""],["PG::TextDecoder::String","","PG/TextDecoder/String.html","","<p>This is a decoder class for conversion of PostgreSQL text output to to Ruby\nString object. The output …\n"],["PG::TextDecoder::TimestampWithTimeZone","","PG/TextDecoder/TimestampWithTimeZone.html","",""],["PG::TextDecoder::TimestampWithoutTimeZone","","PG/TextDecoder/TimestampWithoutTimeZone.html","",""],["PG::TextEncoder","","PG/TextEncoder.html","","<p>This module encapsulates all encoder classes with text output format\n"],["PG::TextEncoder::Array","","PG/TextEncoder/Array.html","","<p>This is the encoder class for PostgreSQL array types.\n<p>All values are encoded according to the #elements_type …\n"],["PG::TextEncoder::Boolean","","PG/TextEncoder/Boolean.html","","<p>This is the encoder class for the PostgreSQL bool type.\n<p>Ruby value false is encoded as SQL <code>FALSE</code> value. …\n"],["PG::TextEncoder::Bytea","","PG/TextEncoder/Bytea.html","","<p>This is an encoder class for the PostgreSQL bytea type for server version\n9.0 or newer.\n<p>The binary String …\n"],["PG::TextEncoder::CopyRow","","PG/TextEncoder/CopyRow.html","","<p>This class encodes one row of arbitrary columns for transmission as COPY\ndata in text format. See the …\n"],["PG::TextEncoder::Date","","PG/TextEncoder/Date.html","",""],["PG::TextEncoder::Float","","PG/TextEncoder/Float.html","","<p>This is the encoder class for the PostgreSQL float types.\n"],["PG::TextEncoder::Identifier","","PG/TextEncoder/Identifier.html","","<p>This is the encoder class for PostgreSQL identifiers.\n<p>An Array value can be used for “schema.table.column” …\n"],["PG::TextEncoder::Integer","","PG/TextEncoder/Integer.html","","<p>This is the encoder class for the PostgreSQL int types.\n<p>Non-Integer values are expected to have method …\n"],["PG::TextEncoder::JSON","","PG/TextEncoder/JSON.html","",""],["PG::TextEncoder::QuotedLiteral","","PG/TextEncoder/QuotedLiteral.html","","<p>This is the encoder class for PostgreSQL literals.\n<p>A literal is quoted and escaped by the +&#39;+ character. …\n"],["PG::TextEncoder::String","","PG/TextEncoder/String.html","","<p>This is the encoder class for the PostgreSQL text types.\n<p>Non-String values are expected to have method …\n"],["PG::TextEncoder::TimestampWithTimeZone","","PG/TextEncoder/TimestampWithTimeZone.html","",""],["PG::TextEncoder::TimestampWithoutTimeZone","","PG/TextEncoder/TimestampWithoutTimeZone.html","",""],["PG::TextEncoder::ToBase64","","PG/TextEncoder/ToBase64.html","","<p>This is an encoder class for conversion of binary to base64 data.\n"],["PG::TypeMap","","PG/TypeMap.html","","<p>This is the base class for type maps. See derived classes for\nimplementations of different type cast …\n"],["PG::TypeMap::DefaultTypeMappable","","PG/TypeMap/DefaultTypeMappable.html","",""],["PG::TypeMapAllStrings","","PG/TypeMapAllStrings.html","","<p>This type map casts all values received from the database server to Strings\nand sends all values to the …\n"],["PG::TypeMapByClass","","PG/TypeMapByClass.html","","<p>This type map casts values based on the class or the ancestors of the given\nvalue to be sent.\n<p>This type …\n"],["PG::TypeMapByColumn","","PG/TypeMapByColumn.html","","<p>This type map casts values by a coder assigned per field/column.\n<p>Each PG:TypeMapByColumn has a fixed list …\n"],["PG::TypeMapByMriType","","PG/TypeMapByMriType.html","","<p>This type map casts values based on the Ruby object type code of the given\nvalue to be sent.\n<p>This type …\n"],["PG::TypeMapByOid","","PG/TypeMapByOid.html","","<p>This type map casts values based on the type OID of the given column in the\nresult set.\n<p>This type map …\n"],["PG::TypeMapInRuby","","PG/TypeMapInRuby.html","","<p>This class can be used to implement a type map in ruby, typically as a\n#default_type_map in a type map …\n"],["PG::UnableToSend","","PG/UnableToSend.html","",""],["Parametro","","Parametro.html","",""],["ParametroTest","","ParametroTest.html","",""],["ParametrosController","","ParametrosController.html","",""],["ParametrosControllerTest","","ParametrosControllerTest.html","",""],["ParametrosHelper","","ParametrosHelper.html","",""],["ParametrosTest","","ParametrosTest.html","",""],["Permiso","","Permiso.html","",""],["PermisoTest","","PermisoTest.html","",""],["PermisosController","","PermisosController.html","",""],["PermisosControllerTest","","PermisosControllerTest.html","",""],["PermisosHelper","","PermisosHelper.html","",""],["PermisosTest","","PermisosTest.html","",""],["Role","","Role.html","",""],["RoleTest","","RoleTest.html","",""],["RolesController","","RolesController.html","",""],["RolesControllerTest","","RolesControllerTest.html","",""],["RolesHelper","","RolesHelper.html","",""],["RolesTest","","RolesTest.html","",""],["Seguimiento","","Seguimiento.html","",""],["SeguimientoTest","","SeguimientoTest.html","",""],["SeguimientosController","","SeguimientosController.html","",""],["SeguimientosControllerTest","","SeguimientosControllerTest.html","",""],["SeguimientosHelper","","SeguimientosHelper.html","",""],["SeguimientosTest","","SeguimientosTest.html","",""],["Solicitud","","Solicitud.html","",""],["SolicitudTest","","SolicitudTest.html","",""],["SolicitudsController","","SolicitudsController.html","",""],["SolicitudsControllerTest","","SolicitudsControllerTest.html","",""],["SolicitudsHelper","","SolicitudsHelper.html","",""],["SolicitudsTest","","SolicitudsTest.html","",""],["TipoNotificacione","","TipoNotificacione.html","",""],["TipoNotificacioneTest","","TipoNotificacioneTest.html","",""],["TipoNotificacionesController","","TipoNotificacionesController.html","",""],["TipoNotificacionesControllerTest","","TipoNotificacionesControllerTest.html","",""],["TipoNotificacionesHelper","","TipoNotificacionesHelper.html","",""],["TipoNotificacionesTest","","TipoNotificacionesTest.html","",""],["TipoSeguimiento","","TipoSeguimiento.html","",""],["TipoSeguimientoTest","","TipoSeguimientoTest.html","",""],["TipoSeguimientosController","","TipoSeguimientosController.html","",""],["TipoSeguimientosControllerTest","","TipoSeguimientosControllerTest.html","",""],["TipoSeguimientosHelper","","TipoSeguimientosHelper.html","",""],["TipoSeguimientosTest","","TipoSeguimientosTest.html","",""],["TipoSolicitude","","TipoSolicitude.html","",""],["TipoSolicitudeTest","","TipoSolicitudeTest.html","",""],["TipoSolicitudesController","","TipoSolicitudesController.html","",""],["TipoSolicitudesControllerTest","","TipoSolicitudesControllerTest.html","",""],["TipoSolicitudesHelper","","TipoSolicitudesHelper.html","",""],["TipoSolicitudesTest","","TipoSolicitudesTest.html","",""],["User","","User.html","",""],["UserTest","","UserTest.html","",""],["UsersController","","UsersController.html","",""],["UsersControllerTest","","UsersControllerTest.html","",""],["UsersHelper","","UsersHelper.html","",""],["UsersTest","","UsersTest.html","",""],["WelcomeController","","WelcomeController.html","",""],["WelcomeControllerTest","","WelcomeControllerTest.html","",""],["WelcomeHelper","","WelcomeHelper.html","",""],["==","PG::Coder","PG/Coder.html#method-i-3D-3D","(v)",""],["[]","PG::Result","PG/Result.html#method-i-5B-5D","(p1)","<p>Returns tuple <em>n</em> as a hash.\n"],["[]","PG::TypeMapByClass","PG/TypeMapByClass.html#method-i-5B-5D","(p1)","<p>Returns the encoder object for the given <code>class</code>\n"],["[]","PG::TypeMapByMriType","PG/TypeMapByMriType.html#method-i-5B-5D","(p1)","<p>Returns the encoder object for the given <code>mri_type</code>\n<p>See #[]= for allowed <code>mri_type</code> .\n"],["[]=","PG::TypeMapByClass","PG/TypeMapByClass.html#method-i-5B-5D-3D","(p1, p2)","<p>Assigns a new PG::Coder object to the type map. The encoder is chosen for\nall values that are a kind …\n"],["[]=","PG::TypeMapByMriType","PG/TypeMapByMriType.html#method-i-5B-5D-3D","(p1, p2)","<p>Assigns a new PG::Coder object to the type map. The encoder is registered\nfor type casts of the given …\n"],["add_coder","PG::TypeMapByOid","PG/TypeMapByOid.html#method-i-add_coder","(p1)","<p>Assigns a new PG::Coder object to the type map. The decoder is registered\nfor type casts based on it&#39;s …\n"],["adjunto_params","AdjuntosController","AdjuntosController.html#method-i-adjunto_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["alias_type","PG::BasicTypeRegistry","PG/BasicTypeRegistry.html#method-c-alias_type","(format, new, old)","<p>Alias the <code>old</code> type to the <code>new</code> type.\n"],["ansi_code","PG::TestingHelpers","PG/TestingHelpers.html#method-i-ansi_code","( *attributes )","<p>Create a string that contains the ANSI codes specified and return it\n"],["area_params","AreasController","AreasController.html#method-i-area_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["array_encoders_by_klass","PG::BasicTypeMapForQueries","PG/BasicTypeMapForQueries.html#method-i-array_encoders_by_klass","()",""],["array_type_map_for","Object","Object.html#method-i-array_type_map_for","(value)",""],["async_exec","PG::Connection","PG/Connection.html#method-i-async_exec","(*args)","<p>This function has the same behavior as #exec, but is implemented using the\nasynchronous command processing …\n"],["async_query","PG::Connection","PG/Connection.html#method-i-async_query","(*args)",""],["autoclear?","PG::Result","PG/Result.html#method-i-autoclear-3F","()","<p>Returns <code>true</code> if the underlying C struct will be cleared\nautomatically by libpq. Elsewise the result is …\n"],["backend_pid","PG::Connection","PG/Connection.html#method-i-backend_pid","()","<p>Returns the process ID of the backend server process for this connection.\nNote that this is a PID on …\n"],["block","PG::Connection","PG/Connection.html#method-i-block","(p1 = v1)","<p>Blocks until the server is no longer busy, or until the optional\n<em>timeout</em> is reached, whichever comes …\n"],["build_coder_maps","PG::BasicTypeRegistry","PG/BasicTypeRegistry.html#method-i-build_coder_maps","(connection)",""],["build_column_map","PG::TypeMapByOid","PG/TypeMapByOid.html#method-i-build_column_map","(p1)","<p>This builds a PG::TypeMapByColumn that fits to the given PG::Result object\nbased on it&#39;s type OIDs …\n"],["camelize","Object","Object.html#method-i-camelize","(lower_case_and_underscored_word)",""],["can_exec_query?","PG::TestingHelpers::ConnStillUsableMatcher","PG/TestingHelpers/ConnStillUsableMatcher.html#method-i-can_exec_query-3F","()",""],["cancel","PG::Connection","PG/Connection.html#method-i-cancel","()","<p>Requests cancellation of the command currently being processed. (Only\nimplemented in PostgreSQL &gt;= …\n"],["change","AddAreaIdToRoles","AddAreaIdToRoles.html#method-i-change","()",""],["change","AddLoginIdToSolicituds","AddLoginIdToSolicituds.html#method-i-change","()",""],["change","AddTipoNotificacioneIdToNotificaciones","AddTipoNotificacioneIdToNotificaciones.html#method-i-change","()",""],["change","AddTipoSeguimientoIdToSeguimientos","AddTipoSeguimientoIdToSeguimientos.html#method-i-change","()",""],["change","CreateAdjuntos","CreateAdjuntos.html#method-i-change","()",""],["change","CreateAreas","CreateAreas.html#method-i-change","()",""],["change","CreateEstados","CreateEstados.html#method-i-change","()",""],["change","CreateNotificaciones","CreateNotificaciones.html#method-i-change","()",""],["change","CreateParametros","CreateParametros.html#method-i-change","()",""],["change","CreatePermisos","CreatePermisos.html#method-i-change","()",""],["change","CreateRoles","CreateRoles.html#method-i-change","()",""],["change","CreateSeguimientos","CreateSeguimientos.html#method-i-change","()",""],["change","CreateSolicituds","CreateSolicituds.html#method-i-change","()",""],["change","CreateTipoNotificaciones","CreateTipoNotificaciones.html#method-i-change","()",""],["change","CreateTipoSeguimientos","CreateTipoSeguimientos.html#method-i-change","()",""],["change","CreateTipoSolicitudes","CreateTipoSolicitudes.html#method-i-change","()",""],["change","DeviseCreateLogins","DeviseCreateLogins.html#method-i-change","()",""],["check","PG::Result","PG/Result.html#method-i-check","()","<p>Raises appropriate exception if PG::Result is in a bad state.\n"],["check_for_lingering_connections","PG::TestingHelpers","PG/TestingHelpers.html#method-i-check_for_lingering_connections","( conn )",""],["check_for_problems","PG::TestingHelpers::ConnStillUsableMatcher","PG/TestingHelpers/ConnStillUsableMatcher.html#method-i-check_for_problems","()",""],["check_format_and_direction","PG::BasicTypeRegistry","PG/BasicTypeRegistry.html#method-i-check_format_and_direction","(format, direction)",""],["check_result","PG::Result","PG/Result.html#method-i-check_result","()",""],["clear","PG::Result","PG/Result.html#method-i-clear","()","<p>Clears the PG::Result object as the result of the query.\n<p>If PG::Result#autoclear? is true then the result …\n"],["cleared?","PG::Result","PG/Result.html#method-i-cleared-3F","()","<p>Returns <code>true</code> if the backend result memory has been free&#39;d.\n"],["client_encoding=","PG::Connection","PG/Connection.html#method-i-client_encoding-3D","(p1)",""],["close","PG::Connection","PG/Connection.html#method-i-close","()",""],["cmd_status","PG::Result","PG/Result.html#method-i-cmd_status","()","<p>Returns the status string of the last query command.\n"],["cmd_tuples","PG::Result","PG/Result.html#method-i-cmd_tuples","()","<p>Returns the number of tuples (rows) affected by the SQL command.\n<p>If the SQL command that generated the …\n"],["cmdtuples","PG::Result","PG/Result.html#method-i-cmdtuples","()",""],["coder_by_name","PG::BasicTypeMapForQueries","PG/BasicTypeMapForQueries.html#method-i-coder_by_name","(format, direction, name)",""],["coder_by_name","PG::BasicTypeRegistry::CoderMap","PG/BasicTypeRegistry/CoderMap.html#method-i-coder_by_name","(name)",""],["coder_by_oid","PG::BasicTypeRegistry::CoderMap","PG/BasicTypeRegistry/CoderMap.html#method-i-coder_by_oid","(oid)",""],["coders","PG::TypeMapByClass","PG/TypeMapByClass.html#method-i-coders","()","<p>Returns all classes and their assigned encoder object.\n"],["coders","PG::TypeMapByColumn","PG/TypeMapByColumn.html#method-i-coders","()","<p>Array of PG::Coder objects. The length of the Array corresponds to the\nnumber of columns or bind parameters …\n"],["coders","PG::TypeMapByMriType","PG/TypeMapByMriType.html#method-i-coders","()","<p>Returns all mri types and their assigned encoder object.\n"],["coders","PG::TypeMapByOid","PG/TypeMapByOid.html#method-i-coders","()","<p>Array of all assigned PG::Coder objects.\n"],["colorize","PG::TestingHelpers","PG/TestingHelpers.html#method-i-colorize","( *args )","<p>Colorize the given <code>string</code> with the specified\n<code>attributes</code> and return it, handling line-endings, color reset,\n…\n"],["column_values","PG::Result","PG/Result.html#method-i-column_values","(p1)","<p>Returns an Array of the values from the nth column of each tuple in the\nresult.\n"],["conndefaults","PG::Connection","PG/Connection.html#method-c-conndefaults","()","<p>Returns an array of hashes. Each hash has the keys:\n<p><code>:keyword</code> &mdash; the name of the option\n<p><code>:envvar</code> &mdash; the environment …\n"],["conndefaults","PG::Connection","PG/Connection.html#method-i-conndefaults","()","<p>Returns an array of Hashes with connection defaults. See ::conndefaults for\ndetails.\n"],["conndefaults_hash","PG::Connection","PG/Connection.html#method-c-conndefaults_hash","()","<p>Return the Postgres connection defaults structure as a Hash keyed by option\nkeyword (as a Symbol).\n<p>See …\n"],["conndefaults_hash","PG::Connection","PG/Connection.html#method-i-conndefaults_hash","()","<p>Returns a Hash with connection defaults. See ::conndefaults_hash for\ndetails.\n"],["connect","PG","PG.html#method-c-connect","( *args )","<p>Convenience alias for PG::Connection.new.\n"],["connect_poll","PG::Connection","PG/Connection.html#method-i-connect_poll","()","<p>Returns one of:\n<p><code>PGRES_POLLING_READING</code> &mdash; wait until the socket is ready to read\n<p><code>PGRES_POLLING_WRITING</code> &mdash; wait …\n"],["connect_start","PG::Connection","PG/Connection.html#method-c-connect_start","(*args)","<p>This is an asynchronous version of PG::Connection.connect().\n<p>Use #connect_poll to poll the status of the …\n"],["connection_needs_password","PG::Connection","PG/Connection.html#method-i-connection_needs_password","()","<p>Returns <code>true</code> if the authentication method required a password,\nbut none was available. <code>false</code> otherwise. …\n"],["connection_used_password","PG::Connection","PG/Connection.html#method-i-connection_used_password","()","<p>Returns <code>true</code> if the authentication method used a\ncaller-supplied password, <code>false</code> otherwise.\n"],["conninfo","PG::Connection","PG/Connection.html#method-i-conninfo","()","<p>Returns the connection options used by a live connection.\n<p>Available since PostgreSQL-9.3\n"],["conninfo_hash","PG::Connection","PG/Connection.html#method-i-conninfo_hash","()","<p>Return the Postgres connection info structure as a Hash keyed by option\nkeyword (as a Symbol).\n<p>See also …\n"],["consume_input","PG::Connection","PG/Connection.html#method-i-consume_input","()","<p>If input is available from the server, consume it. After calling\n<code>consume_input</code>, you can check <code>is_busy</code> …\n"],["copy_data","PG::Connection","PG/Connection.html#method-i-copy_data","( sql, coder=nil )","<p>Execute a copy process for transfering data to or from the server.\n<p>This issues the SQL COPY command via …\n"],["create","AdjuntosController","AdjuntosController.html#method-i-create","()","<p>POST /adjuntos POST /adjuntos.json\n"],["create","AreasController","AreasController.html#method-i-create","()","<p>POST /areas POST /areas.json\n"],["create","EstadosController","EstadosController.html#method-i-create","()","<p>POST /estados POST /estados.json\n"],["create","NotificacionesController","NotificacionesController.html#method-i-create","()","<p>POST /notificaciones POST /notificaciones.json\n"],["create","ParametrosController","ParametrosController.html#method-i-create","()","<p>POST /parametros POST /parametros.json\n"],["create","PermisosController","PermisosController.html#method-i-create","()","<p>POST /permisos POST /permisos.json\n"],["create","RolesController","RolesController.html#method-i-create","()","<p>POST /roles POST /roles.json\n"],["create","SeguimientosController","SeguimientosController.html#method-i-create","()","<p>POST /seguimientos POST /seguimientos.json\n"],["create","SolicitudsController","SolicitudsController.html#method-i-create","()","<p>POST /solicituds POST /solicituds.json\n"],["create","TipoNotificacionesController","TipoNotificacionesController.html#method-i-create","()","<p>POST /tipo_notificaciones POST /tipo_notificaciones.json\n"],["create","TipoSeguimientosController","TipoSeguimientosController.html#method-i-create","()","<p>POST /tipo_seguimientos POST /tipo_seguimientos.json\n"],["create","TipoSolicitudesController","TipoSolicitudesController.html#method-i-create","()","<p>POST /tipo_solicitudes POST /tipo_solicitudes.json\n"],["create","UsersController","UsersController.html#method-i-create","()","<p>POST /users POST /users.json\n"],["db","PG::Connection","PG/Connection.html#method-i-db","()","<p>Returns the connected database name.\n"],["decode","Exception_in_decode","Exception_in_decode.html#method-i-decode","(res, tuple, field)",""],["decode","Object","Object.html#method-i-decode","(*v)",""],["decode","PG::Coder","PG/Coder.html#method-i-decode","(*args)","<p>Decodes the given string representation into a Ruby object, without sending\ndata to/from the database …\n"],["decode","PG::TextDecoder::Date","PG/TextDecoder/Date.html#method-i-decode","(string, tuple=nil, field=nil)",""],["decode","PG::TextDecoder::JSON","PG/TextDecoder/JSON.html#method-i-decode","(string, tuple=nil, field=nil)",""],["decode","PG::TextDecoder::TimestampWithTimeZone","PG/TextDecoder/TimestampWithTimeZone.html#method-i-decode","(string, tuple=nil, field=nil)",""],["decode","PG::TextDecoder::TimestampWithoutTimeZone","PG/TextDecoder/TimestampWithoutTimeZone.html#method-i-decode","(string, tuple=nil, field=nil)",""],["decoder_for_get_copy_data","PG::Connection","PG/Connection.html#method-i-decoder_for_get_copy_data","()","<p>Returns the default coder object that is currently set for type casting of\nreceived data by #get_copy_data …\n"],["decoder_for_get_copy_data=","PG::Connection","PG/Connection.html#method-i-decoder_for_get_copy_data-3D","(p1)","<p>Set the default coder that is used for type casting of received data by\n#get_copy_data .\n<p><code>decoder</code> can be: …\n"],["default_type_map","PG::TypeMap::DefaultTypeMappable","PG/TypeMap/DefaultTypeMappable.html#method-i-default_type_map","()","<p>Returns the default TypeMap that is currently set for values that could not\nbe casted by this type map. …\n"],["default_type_map=","PG::TypeMap::DefaultTypeMappable","PG/TypeMap/DefaultTypeMappable.html#method-i-default_type_map-3D","(p1)","<p>Set the default TypeMap that is used for values that could not be casted by\nthis type map.\n<p><code>typemap</code> must …\n"],["delimiter","PG::CompositeCoder","PG/CompositeCoder.html#method-i-delimiter","()","<p>The character that separates values within the composite type.\n"],["delimiter","PG::CopyCoder","PG/CopyCoder.html#method-i-delimiter","()","<p>The character that separates columns within each row (line) of the file.\n"],["delimiter=","PG::CompositeCoder","PG/CompositeCoder.html#method-i-delimiter-3D","(p1)","<p>Specifies the character that separates values within the composite type.\nThe default is a comma. This …\n"],["delimiter=","PG::CopyCoder","PG/CopyCoder.html#method-i-delimiter-3D","(p1)","<p>Specifies the character that separates columns within each row (line) of\nthe file. The default is a tab …\n"],["describe_portal","PG::Connection","PG/Connection.html#method-i-describe_portal","(p1)","<p>Retrieve information about the portal <em>portal_name</em>.\n"],["describe_prepared","PG::Connection","PG/Connection.html#method-i-describe_prepared","(p1)","<p>Retrieve information about the prepared statement <em>statement_name</em>.\n"],["destroy","AdjuntosController","AdjuntosController.html#method-i-destroy","()","<p>DELETE /adjuntos/1 DELETE /adjuntos/1.json\n"],["destroy","AreasController","AreasController.html#method-i-destroy","()","<p>DELETE /areas/1 DELETE /areas/1.json\n"],["destroy","EstadosController","EstadosController.html#method-i-destroy","()","<p>DELETE /estados/1 DELETE /estados/1.json\n"],["destroy","NotificacionesController","NotificacionesController.html#method-i-destroy","()","<p>DELETE /notificaciones/1 DELETE /notificaciones/1.json\n"],["destroy","ParametrosController","ParametrosController.html#method-i-destroy","()","<p>DELETE /parametros/1 DELETE /parametros/1.json\n"],["destroy","PermisosController","PermisosController.html#method-i-destroy","()","<p>DELETE /permisos/1 DELETE /permisos/1.json\n"],["destroy","RolesController","RolesController.html#method-i-destroy","()","<p>DELETE /roles/1 DELETE /roles/1.json\n"],["destroy","SeguimientosController","SeguimientosController.html#method-i-destroy","()","<p>DELETE /seguimientos/1 DELETE /seguimientos/1.json\n"],["destroy","SolicitudsController","SolicitudsController.html#method-i-destroy","()","<p>DELETE /solicituds/1 DELETE /solicituds/1.json\n"],["destroy","TipoNotificacionesController","TipoNotificacionesController.html#method-i-destroy","()","<p>DELETE /tipo_notificaciones/1 DELETE /tipo_notificaciones/1.json\n"],["destroy","TipoSeguimientosController","TipoSeguimientosController.html#method-i-destroy","()","<p>DELETE /tipo_seguimientos/1 DELETE /tipo_seguimientos/1.json\n"],["destroy","TipoSolicitudesController","TipoSolicitudesController.html#method-i-destroy","()","<p>DELETE /tipo_solicitudes/1 DELETE /tipo_solicitudes/1.json\n"],["destroy","UsersController","UsersController.html#method-i-destroy","()","<p>DELETE /users/1 DELETE /users/1.json\n"],["dup","PG::Coder","PG/Coder.html#method-i-dup","()",""],["each","PG::Result","PG/Result.html#method-i-each","()","<p>Invokes block for each tuple in the result set.\n"],["each_row","PG::Result","PG/Result.html#method-i-each_row","()","<p>Yields each row of the result. The row is a list of column values.\n"],["edit","AdjuntosController","AdjuntosController.html#method-i-edit","()","<p>GET /adjuntos/1/edit\n"],["edit","AreasController","AreasController.html#method-i-edit","()","<p>GET /areas/1/edit\n"],["edit","EstadosController","EstadosController.html#method-i-edit","()","<p>GET /estados/1/edit\n"],["edit","NotificacionesController","NotificacionesController.html#method-i-edit","()","<p>GET /notificaciones/1/edit\n"],["edit","ParametrosController","ParametrosController.html#method-i-edit","()","<p>GET /parametros/1/edit\n"],["edit","PermisosController","PermisosController.html#method-i-edit","()","<p>GET /permisos/1/edit\n"],["edit","RolesController","RolesController.html#method-i-edit","()","<p>GET /roles/1/edit\n"],["edit","SeguimientosController","SeguimientosController.html#method-i-edit","()","<p>GET /seguimientos/1/edit\n"],["edit","SolicitudsController","SolicitudsController.html#method-i-edit","()","<p>GET /solicituds/1/edit\n"],["edit","TipoNotificacionesController","TipoNotificacionesController.html#method-i-edit","()","<p>GET /tipo_notificaciones/1/edit\n"],["edit","TipoSeguimientosController","TipoSeguimientosController.html#method-i-edit","()","<p>GET /tipo_seguimientos/1/edit\n"],["edit","TipoSolicitudesController","TipoSolicitudesController.html#method-i-edit","()","<p>GET /tipo_solicitudes/1/edit\n"],["edit","UsersController","UsersController.html#method-i-edit","()","<p>GET /users/1/edit\n"],["elements_type=","PG::CompositeCoder","PG/CompositeCoder.html#method-i-elements_type-3D","(p1)","<p>Specifies the PG::Coder object that is used to encode or decode the single\nelementes of this composite …\n"],["encode","Object","Object.html#method-i-encode","(*v)",""],["encode","PG::Coder","PG/Coder.html#method-i-encode","(*args)","<p>Encodes the given Ruby object into string representation, without sending\ndata to/from the database server. …\n"],["encode","PG::TextEncoder::Date","PG/TextEncoder/Date.html#method-i-encode","(value)",""],["encode","PG::TextEncoder::JSON","PG/TextEncoder/JSON.html#method-i-encode","(value)",""],["encode","PG::TextEncoder::TimestampWithTimeZone","PG/TextEncoder/TimestampWithTimeZone.html#method-i-encode","(value)",""],["encode","PG::TextEncoder::TimestampWithoutTimeZone","PG/TextEncoder/TimestampWithoutTimeZone.html#method-i-encode","(value)",""],["encoder_for_put_copy_data","PG::Connection","PG/Connection.html#method-i-encoder_for_put_copy_data","()","<p>Returns the default coder object that is currently set for type casting of\nparameters to #put_copy_data …\n"],["encoder_for_put_copy_data=","PG::Connection","PG/Connection.html#method-i-encoder_for_put_copy_data-3D","(p1)","<p>Set the default coder that is used for type casting of parameters to\n#put_copy_data .\n<p><code>encoder</code> can be: …\n"],["encrypt_password","PG::Connection","PG/Connection.html#method-c-encrypt_password","(p1, p2)","<p>This is an older, deprecated version of #encrypt_password. The difference\nis that this function always …\n"],["encrypt_password","PG::Connection","PG/Connection.html#method-i-encrypt_password","(p1, p2, p3 = v3)","<p>This function is intended to be used by client applications that wish to\nsend commands like <code>ALTER USER</code> …\n"],["error_field","PG::Result","PG/Result.html#method-i-error_field","(p1)","<p>Returns the individual field of an error.\n<p><code>fieldcode</code> is one of:\n<p><code>PG_DIAG_SEVERITY</code>\n"],["error_message","PG::Connection","PG/Connection.html#method-i-error_message","()","<p>Returns the error message about connection.\n"],["error_message","PG::Result","PG/Result.html#method-i-error_message","()","<p>Returns the error message of the command as a string.\n"],["escape","PG::Connection","PG/Connection.html#method-i-escape","(p1)",""],["escape_bytea","PG::Connection","PG/Connection.html#method-c-escape_bytea","(p1)","<p>Escapes binary data for use within an SQL command with the type\n<code>bytea</code>.\n<p>Certain byte values must be escaped …\n"],["escape_bytea","PG::Connection","PG/Connection.html#method-i-escape_bytea","(p1)","<p>Escapes binary data for use within an SQL command with the type\n<code>bytea</code>.\n<p>Certain byte values must be escaped …\n"],["escape_identifier","PG::Connection","PG/Connection.html#method-i-escape_identifier","(p1)","<p>Escape an arbitrary String <code>str</code> as an identifier.\n<p>This method does the same as #quote_ident with a String …\n"],["escape_literal","PG::Connection","PG/Connection.html#method-i-escape_literal","(p1)","<p>Escape an arbitrary String <code>str</code> as a literal.\n<p>Available since PostgreSQL-9.0\n"],["escape_string","PG::Connection","PG/Connection.html#method-c-escape_string","(p1)","<p>Returns a SQL-safe version of the String <em>str</em>. This is the\npreferred way to make strings safe for inclusion …\n"],["escape_string","PG::Connection","PG/Connection.html#method-i-escape_string","(p1)","<p>Returns a SQL-safe version of the String <em>str</em>. This is the\npreferred way to make strings safe for inclusion …\n"],["estado_params","EstadosController","EstadosController.html#method-i-estado_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["exec","PG::Connection","PG/Connection.html#method-i-exec","(*args)","<p>Sends SQL query request specified by <em>sql</em> to PostgreSQL. Returns a\nPG::Result instance on success. On …\n"],["exec_params","PG::Connection","PG/Connection.html#method-i-exec_params","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Sends SQL query request specified by <code>sql</code> to PostgreSQL using\nplaceholders for parameters.\n<p>Returns a PG::Result …\n"],["exec_prepared","PG::Connection","PG/Connection.html#method-i-exec_prepared","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Execute prepared named statement specified by <em>statement_name</em>.\nReturns a PG::Result instance on success. …\n"],["external_encoding","PG::Connection","PG/Connection.html#method-i-external_encoding","()","<p>Return the <code>server_encoding</code> of the connected database as a Ruby\nEncoding object. The <code>SQL_ASCII</code> encoding …\n"],["failure_message","PG::TestingHelpers::ConnStillUsableMatcher","PG/TestingHelpers/ConnStillUsableMatcher.html#method-i-failure_message","()",""],["failure_message_when_negated","PG::TestingHelpers::ConnStillUsableMatcher","PG/TestingHelpers/ConnStillUsableMatcher.html#method-i-failure_message_when_negated","()",""],["fformat","PG::Result","PG/Result.html#method-i-fformat","(p1)","<p>Returns the format (0 for text, 1 for binary) of column\n<em>column_number</em>.\n<p>Raises ArgumentError if <em>column_number</em> …\n"],["field_values","PG::Result","PG/Result.html#method-i-field_values","(p1)","<p>Returns an Array of the values from the given <em>field</em> of each tuple\nin the result.\n"],["fields","PG::Result","PG/Result.html#method-i-fields","()","<p>Returns an array of Strings representing the names of the fields in the\nresult.\n"],["finish","PG::Connection","PG/Connection.html#method-i-finish","()","<p>Closes the backend connection.\n"],["finished?","PG::Connection","PG/Connection.html#method-i-finished-3F","()","<p>Returns <code>true</code> if the backend connection has been closed.\n"],["fit_to_copy_get","Object","Object.html#method-i-fit_to_copy_get","(*args)",""],["fit_to_copy_get","PG::TypeMapInRuby","PG/TypeMapInRuby.html#method-i-fit_to_copy_get","()","<p>Check that the type map can be used for PG::Connection#get_copy_data.\n<p>This method is called, when a type …\n"],["fit_to_query","Object","Object.html#method-i-fit_to_query","(params)",""],["fit_to_query","PG::TypeMapInRuby","PG/TypeMapInRuby.html#method-i-fit_to_query","(p1)","<p>Check that the type map fits to the given user values.\n<p>This method is called, when a type map is used …\n"],["fit_to_result","Object","Object.html#method-i-fit_to_result","(*args)",""],["fit_to_result","PG::TypeMapInRuby","PG/TypeMapInRuby.html#method-i-fit_to_result","(p1)","<p>Check that the type map fits to the result.\n<p>This method is called, when a type map is assigned to a result. …\n"],["flush","PG::Connection","PG/Connection.html#method-i-flush","()","<p>Attempts to flush any queued output data to the server. Returns\n<code>true</code> if data is successfully flushed, …\n"],["fmod","PG::Result","PG/Result.html#method-i-fmod","(p1)","<p>Returns the type modifier associated with column <em>column_number</em>.\nSee the #ftype method for an example …\n"],["fname","PG::Result","PG/Result.html#method-i-fname","(p1)","<p>Returns the name of the column corresponding to <em>index</em>.\n"],["fnumber","PG::Result","PG/Result.html#method-i-fnumber","(p1)","<p>Returns the index of the field specified by the string <code>name</code>.\nThe given <code>name</code> is treated like an identifier …\n"],["format","PG::Coder","PG/Coder.html#method-i-format","()","<p>The format code that is sent alongside with an encoded query parameter\nvalue.\n"],["format=","PG::Coder","PG/Coder.html#method-i-format-3D","(p1)","<p>Specifies the format code that is sent alongside with an encoded query\nparameter value.\n<p>The default is …\n"],["fsize","PG::Result","PG/Result.html#method-i-fsize","(p1)","<p>Returns the size of the field type in bytes.  Returns <code>-1</code> if\nthe field is variable sized.\n\n<pre>res = conn.exec(&quot;SELECT ...</pre>\n"],["ftable","PG::Result","PG/Result.html#method-i-ftable","(p1)","<p>Returns the Oid of the table from which the column <em>column_number</em>\nwas fetched.\n<p>Raises ArgumentError if …\n"],["ftablecol","PG::Result","PG/Result.html#method-i-ftablecol","(p1)","<p>Returns the column number (within its table) of the table from which the\ncolumn <em>column_number</em> is made …\n"],["ftype","PG::Result","PG/Result.html#method-i-ftype","(p1)","<p>Returns the data type associated with <em>column_number</em>.\n<p>The integer returned is the internal <code>OID</code> number (in …\n"],["get_array_type","PG::BasicTypeMapForQueries","PG/BasicTypeMapForQueries.html#method-i-get_array_type","(value)",""],["get_client_encoding","PG::Connection","PG/Connection.html#method-i-get_client_encoding","()","<p>Returns the client encoding as a String.\n"],["get_copy_data","PG::Connection","PG/Connection.html#method-i-get_copy_data","(p1 = v1, p2 = v2)","<p>Return a string containing one row of data, <code>nil</code> if the copy is\ndone, or <code>false</code> if the call would block …\n"],["get_last_result","PG::Connection","PG/Connection.html#method-i-get_last_result","()","<p>This function retrieves all available results on the current connection\n(from previously issued asynchronous …\n"],["get_result","PG::Connection","PG/Connection.html#method-i-get_result","()","<p>Blocks waiting for the next result from a call to #send_query (or another\nasynchronous command), and …\n"],["getisnull","PG::Result","PG/Result.html#method-i-getisnull","(p1, p2)","<p>Returns <code>true</code> if the specified value is <code>nil</code>;\n<code>false</code> otherwise.\n"],["getlength","PG::Result","PG/Result.html#method-i-getlength","(p1, p2)","<p>Returns the (String) length of the field in bytes.\n<p>Equivalent to\n<code>res.value(<em>tup_num</em>,<em>field_num</em>).length</code>. …\n"],["getvalue","PG::Result","PG/Result.html#method-i-getvalue","(p1, p2)","<p>Returns the value in tuple number <em>tup_num</em>, field\n<em>field_num</em>, or <code>nil</code> if the field is <code>NULL</code>.\n"],["host","PG::Connection","PG/Connection.html#method-i-host","()","<p>Returns the connected server name.\n"],["included","PG::TestingHelpers","PG/TestingHelpers.html#method-c-included","( mod )","<p>Automatically set up the database when it&#39;s used, and wrap a\ntransaction around examples that don&#39;t …\n"],["index","AdjuntosController","AdjuntosController.html#method-i-index","()","<p>GET /adjuntos GET /adjuntos.json\n"],["index","AreasController","AreasController.html#method-i-index","()","<p>GET /areas GET /areas.json\n"],["index","EstadosController","EstadosController.html#method-i-index","()","<p>GET /estados GET /estados.json\n"],["index","NotificacionesController","NotificacionesController.html#method-i-index","()","<p>GET /notificaciones GET /notificaciones.json\n"],["index","ParametrosController","ParametrosController.html#method-i-index","()","<p>GET /parametros GET /parametros.json\n"],["index","PermisosController","PermisosController.html#method-i-index","()","<p>GET /permisos GET /permisos.json\n"],["index","RolesController","RolesController.html#method-i-index","()","<p>GET /roles GET /roles.json\n"],["index","SeguimientosController","SeguimientosController.html#method-i-index","()","<p>GET /seguimientos GET /seguimientos.json\n"],["index","SolicitudsController","SolicitudsController.html#method-i-index","()","<p>GET /solicituds GET /solicituds.json\n"],["index","TipoNotificacionesController","TipoNotificacionesController.html#method-i-index","()","<p>GET /tipo_notificaciones GET /tipo_notificaciones.json\n"],["index","TipoSeguimientosController","TipoSeguimientosController.html#method-i-index","()","<p>GET /tipo_seguimientos GET /tipo_seguimientos.json\n"],["index","TipoSolicitudesController","TipoSolicitudesController.html#method-i-index","()","<p>GET /tipo_solicitudes GET /tipo_solicitudes.json\n"],["index","UsersController","UsersController.html#method-i-index","()","<p>GET /users GET /users.json\n"],["index","WelcomeController","WelcomeController.html#method-i-index","()",""],["init_openssl","PG","PG.html#method-c-init_openssl","(p1, p2)","<p>Allows applications to select which security libraries to initialize.\n<p>If your application initializes …\n"],["init_ssl","PG","PG.html#method-c-init_ssl","(p1)","<p>Allows applications to select which security libraries to initialize.\n<p>This function is equivalent to  …\n"],["inspect","PG::Coder","PG/Coder.html#method-i-inspect","()",""],["inspect","PG::CompositeCoder","PG/CompositeCoder.html#method-i-inspect","()",""],["inspect","PG::Result","PG/Result.html#method-i-inspect","()","<p>Return a String representation of the object suitable for debugging.\n"],["inspect","PG::TypeMapByColumn","PG/TypeMapByColumn.html#method-i-inspect","()",""],["internal_encoding","PG::Connection","PG/Connection.html#method-i-internal_encoding","()","<p>defined in Ruby 1.9 or later.\n<p>Returns:\n<p>an Encoding - client_encoding of the connection as a Ruby Encoding …\n"],["internal_encoding=","PG::Connection","PG/Connection.html#method-i-internal_encoding-3D","(p1)","<p>A wrapper of #set_client_encoding. defined in Ruby 1.9 or later.\n<p><code>value</code> can be one of:\n<p>an Encoding\n"],["is_busy","PG::Connection","PG/Connection.html#method-i-is_busy","()","<p>Returns <code>true</code> if a command is busy, that is, if PQgetResult\nwould block. Otherwise returns <code>false</code>.\n"],["isnonblocking","PG::Connection","PG/Connection.html#method-i-isnonblocking","()","<p>Returns <code>true</code> if a command is busy, that is, if PQgetResult\nwould block. Otherwise returns <code>false</code>.\n"],["isthreadsafe","PG","PG.html#method-c-isthreadsafe","()","<p>Returns <code>true</code> if libpq is thread-safe, <code>false</code>\notherwise.\n"],["library_version","PG","PG.html#method-c-library_version","()","<p>Get the version of the libpq library in use. The number is formed by\nconverting the major, minor, and …\n"],["lo_close","PG::Connection","PG/Connection.html#method-i-lo_close","(p1)","<p>Closes the postgres large object of <em>lo_desc</em>.\n"],["lo_creat","PG::Connection","PG/Connection.html#method-i-lo_creat","(p1 = v1)","<p>Creates a large object with mode <em>mode</em>. Returns a large object Oid.\nOn failure, it raises PG::Error.\n"],["lo_create","PG::Connection","PG/Connection.html#method-i-lo_create","(p1)","<p>Creates a large object with oid <em>oid</em>. Returns the large object Oid.\nOn failure, it raises PG::Error.\n"],["lo_export","PG::Connection","PG/Connection.html#method-i-lo_export","(p1, p2)","<p>Saves a large object of <em>oid</em> to a <em>file</em>.\n"],["lo_import","PG::Connection","PG/Connection.html#method-i-lo_import","(p1)","<p>Import a file to a large object. Returns a large object Oid.\n<p>On failure, it raises a PG::Error.\n"],["lo_lseek","PG::Connection","PG/Connection.html#method-i-lo_lseek","(p1, p2, p3)","<p>Move the large object pointer <em>lo_desc</em> to offset <em>offset</em>.\nValid values for <em>whence</em> are <code>SEEK_SET</code>,\n<code>SEEK_CUR</code> …\n"],["lo_open","PG::Connection","PG/Connection.html#method-i-lo_open","(p1, p2 = v2)","<p>Open a large object of <em>oid</em>. Returns a large object descriptor\ninstance on success. The <em>mode</em> argument …\n"],["lo_read","PG::Connection","PG/Connection.html#method-i-lo_read","(p1, p2)","<p>Attempts to read <em>len</em> bytes from large object <em>lo_desc</em>,\nreturns resulting data.\n"],["lo_seek","PG::Connection","PG/Connection.html#method-i-lo_seek","(p1, p2, p3)",""],["lo_tell","PG::Connection","PG/Connection.html#method-i-lo_tell","(p1)","<p>Returns the current position of the large object <em>lo_desc</em>.\n"],["lo_truncate","PG::Connection","PG/Connection.html#method-i-lo_truncate","(p1, p2)","<p>Truncates the large object <em>lo_desc</em> to size <em>len</em>.\n"],["lo_unlink","PG::Connection","PG/Connection.html#method-i-lo_unlink","(p1)","<p>Unlinks (deletes) the postgres large object of <em>oid</em>.\n"],["lo_write","PG::Connection","PG/Connection.html#method-i-lo_write","(p1, p2)","<p>Writes the string <em>buffer</em> to the large object <em>lo_desc</em>.\nReturns the number of bytes written.\n"],["loclose","PG::Connection","PG/Connection.html#method-i-loclose","(p1)",""],["locreat","PG::Connection","PG/Connection.html#method-i-locreat","(p1 = v1)",""],["locreate","PG::Connection","PG/Connection.html#method-i-locreate","(p1)",""],["loexport","PG::Connection","PG/Connection.html#method-i-loexport","(p1, p2)",""],["log_and_run","PG::TestingHelpers","PG/TestingHelpers.html#method-i-log_and_run","( logpath, *cmd )","<p>Run the specified command <code>cmd</code> after redirecting stdout and\nstderr to the specified <code>logpath</code>, failing if …\n"],["loimport","PG::Connection","PG/Connection.html#method-i-loimport","(p1)",""],["lolseek","PG::Connection","PG/Connection.html#method-i-lolseek","(p1, p2, p3)",""],["loopen","PG::Connection","PG/Connection.html#method-i-loopen","(p1, p2 = v2)",""],["loread","PG::Connection","PG/Connection.html#method-i-loread","(p1, p2)",""],["loseek","PG::Connection","PG/Connection.html#method-i-loseek","(p1, p2, p3)",""],["lotell","PG::Connection","PG/Connection.html#method-i-lotell","(p1)",""],["lotruncate","PG::Connection","PG/Connection.html#method-i-lotruncate","(p1, p2)",""],["lounlink","PG::Connection","PG/Connection.html#method-i-lounlink","(p1)",""],["lowrite","PG::Connection","PG/Connection.html#method-i-lowrite","(p1, p2)",""],["make_empty_pgresult","PG::Connection","PG/Connection.html#method-i-make_empty_pgresult","(p1)","<p>Constructs and empty PG::Result with status <em>status</em>.\n<em>status</em> may be one of:\n<p><code>PGRES_EMPTY_QUERY</code>\n<p><code>PGRES_COMMAND_OK</code> …\n"],["map_types!","PG::Result","PG/Result.html#method-i-map_types-21","(type_map)","<p>Apply a type map for all value retrieving methods.\n<p><code>type_map</code>: a PG::TypeMap instance.\n<p>See PG::BasicTypeMapForResults …\n"],["marshal_dump","PG::Coder","PG/Coder.html#method-i-marshal_dump","()",""],["marshal_load","PG::Coder","PG/Coder.html#method-i-marshal_load","(str)",""],["matches?","PG::TestingHelpers::ConnStillUsableMatcher","PG/TestingHelpers/ConnStillUsableMatcher.html#method-i-matches-3F","( conn )",""],["max_rows_for_online_lookup","PG::TypeMapByOid","PG/TypeMapByOid.html#method-i-max_rows_for_online_lookup","()",""],["max_rows_for_online_lookup=","PG::TypeMapByOid","PG/TypeMapByOid.html#method-i-max_rows_for_online_lookup-3D","(p1)","<p>Threshold for doing Hash lookups versus creation of a dedicated\nPG::TypeMapByColumn. The type map will …\n"],["message","PG::TestingHelpers","PG/TestingHelpers.html#method-i-message","( *msg )","<p>Output a message with highlighting.\n"],["needs_quotation=","PG::CompositeCoder","PG/CompositeCoder.html#method-i-needs_quotation-3D","(p1)","<p>Specifies whether the assigned #elements_type requires quotation marks to\nbe transferred safely. Encoding …\n"],["needs_quotation?","PG::CompositeCoder","PG/CompositeCoder.html#method-i-needs_quotation-3F","()","<p>Specifies whether the assigned #elements_type requires quotation marks to\nbe transferred safely.\n"],["new","AdjuntosController","AdjuntosController.html#method-i-new","()","<p>GET /adjuntos/new\n"],["new","AreasController","AreasController.html#method-i-new","()","<p>GET /areas/new\n"],["new","EstadosController","EstadosController.html#method-i-new","()","<p>GET /estados/new\n"],["new","NotificacionesController","NotificacionesController.html#method-i-new","()","<p>GET /notificaciones/new\n"],["new","Object","Object.html#method-c-new","()",""],["new","PG::BasicTypeMapBasedOnResult","PG/BasicTypeMapBasedOnResult.html#method-c-new","(connection)",""],["new","PG::BasicTypeMapForQueries","PG/BasicTypeMapForQueries.html#method-c-new","(connection)",""],["new","PG::BasicTypeMapForResults","PG/BasicTypeMapForResults.html#method-c-new","(connection)",""],["new","PG::BasicTypeMapForResults::WarningTypeMap","PG/BasicTypeMapForResults/WarningTypeMap.html#method-c-new","(typenames)",""],["new","PG::BasicTypeRegistry::CoderMap","PG/BasicTypeRegistry/CoderMap.html#method-c-new","(result, coders_by_name, format, arraycoder)",""],["new","PG::Coder","PG/Coder.html#method-c-new","(params={})","<p>Create a new coder object based on the attribute Hash.\n"],["new","PG::Coder::BinaryFormatting","PG/Coder/BinaryFormatting.html#method-c-new","( params={} )",""],["new","PG::Connection","PG/Connection.html#method-c-new","(*args)","<p>Create a connection to the specified server.\n<p><code>host</code> &mdash; server hostname\n<p><code>hostaddr</code> &mdash; server address (avoids hostname …\n"],["new","PG::TestingHelpers::ConnStillUsableMatcher","PG/TestingHelpers/ConnStillUsableMatcher.html#method-c-new","()",""],["new","PG::TypeMapByColumn","PG/TypeMapByColumn.html#method-c-new","(p1)","<p>Builds a new type map and assigns a list of coders for the given column.\n<code>coders</code> must be an Array of  …\n"],["new","ParametrosController","ParametrosController.html#method-i-new","()","<p>GET /parametros/new\n"],["new","PermisosController","PermisosController.html#method-i-new","()","<p>GET /permisos/new\n"],["new","RolesController","RolesController.html#method-i-new","()","<p>GET /roles/new\n"],["new","SeguimientosController","SeguimientosController.html#method-i-new","()","<p>GET /seguimientos/new\n"],["new","SolicitudsController","SolicitudsController.html#method-i-new","()","<p>GET /solicituds/new\n"],["new","TipoNotificacionesController","TipoNotificacionesController.html#method-i-new","()","<p>GET /tipo_notificaciones/new\n"],["new","TipoSeguimientosController","TipoSeguimientosController.html#method-i-new","()","<p>GET /tipo_seguimientos/new\n"],["new","TipoSolicitudesController","TipoSolicitudesController.html#method-i-new","()","<p>GET /tipo_solicitudes/new\n"],["new","UsersController","UsersController.html#method-i-new","()","<p>GET /users/new\n"],["nfields","PG::Result","PG/Result.html#method-i-nfields","()","<p>Returns the number of columns in the query result.\n"],["nonblocking?","PG::Connection","PG/Connection.html#method-i-nonblocking-3F","()",""],["notificacione_params","NotificacionesController","NotificacionesController.html#method-i-notificacione_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["notifies","PG::Connection","PG/Connection.html#method-i-notifies","()","<p>Returns a hash of the unprocessed notifications. If there is no unprocessed\nnotifier, it returns <code>nil</code> …\n"],["notifies_wait","PG::Connection","PG/Connection.html#method-i-notifies_wait","(p1 = v1)",""],["nparams","PG::Result","PG/Result.html#method-i-nparams","()","<p>Returns the number of parameters of a prepared statement. Only useful for\nthe result returned by conn.describePrepared …\n"],["ntuples","PG::Result","PG/Result.html#method-i-ntuples","()","<p>Returns the number of tuples in the query result.\n"],["null_string","PG::CopyCoder","PG/CopyCoder.html#method-i-null_string","()","<p>The string that represents a null value.\n"],["null_string=","PG::CopyCoder","PG/CopyCoder.html#method-i-null_string-3D","(p1)","<p>Specifies the string that represents a null value. The default is N\n(backslash-N) in text format, and …\n"],["num_fields","PG::Result","PG/Result.html#method-i-num_fields","()",""],["num_tuples","PG::Result","PG/Result.html#method-i-num_tuples","()",""],["oid","PG::Coder","PG/Coder.html#method-i-oid","()","<p>The type OID that is sent alongside with an encoded query parameter value.\n"],["oid=","PG::Coder","PG/Coder.html#method-i-oid-3D","(p1)","<p>Specifies the type OID that is sent alongside with an encoded query\nparameter value.\n<p>The default is <code>0</code> …\n"],["oid_value","PG::Result","PG/Result.html#method-i-oid_value","()","<p>Returns the <code>oid</code> of the inserted row if applicable, otherwise\n<code>nil</code>.\n"],["oids","PG::TypeMapByColumn","PG/TypeMapByColumn.html#method-i-oids","()","<p>Returns the type oids of the assigned coders.\n"],["options","PG::Connection","PG/Connection.html#method-i-options","()","<p>Returns backend option string.\n"],["parameter_status","PG::Connection","PG/Connection.html#method-i-parameter_status","(p1)","<p>Returns the setting of parameter <em>param_name</em>, where\n<em>param_name</em> is one of\n<p><code>server_version</code>\n<p><code>server_encoding</code> …\n"],["parametro_params","ParametrosController","ParametrosController.html#method-i-parametro_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["paramtype","PG::Result","PG/Result.html#method-i-paramtype","(p1)","<p>Returns the Oid of the data type of parameter <em>param_number</em>. Only\nuseful for the result returned by conn.describePrepared …\n"],["parse_connect_args","PG::Connection","PG/Connection.html#method-c-parse_connect_args","( *args )","<p>Parse the connection <code>args</code> into a connection-parameter string.\nSee PG::Connection.new for valid arguments. …\n"],["pass","PG::Connection","PG/Connection.html#method-i-pass","()","<p>Returns the authenticated password.\n"],["permiso_params","PermisosController","PermisosController.html#method-i-permiso_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["ping","PG::Connection","PG/Connection.html#method-c-ping","(*args)","<p>Check server status.\n<p>Returns one of:\n<p><code>PQPING_OK</code> &mdash; server is accepting connections\n"],["populate_encoder_list","PG::BasicTypeMapForQueries","PG/BasicTypeMapForQueries.html#method-i-populate_encoder_list","()",""],["port","PG::Connection","PG/Connection.html#method-i-port","()","<p>Returns the connected server port number.\n"],["prepare","PG::Connection","PG/Connection.html#method-i-prepare","(p1, p2, p3 = v3)","<p>Prepares statement <em>sql</em> with name <em>name</em> to be executed\nlater. Returns a PG::Result instance on success. …\n"],["protocol_version","PG::Connection","PG/Connection.html#method-i-protocol_version","()","<p>The 3.0 protocol will normally be used when communicating with PostgreSQL\n7.4 or later servers; pre-7.4 …\n"],["put_copy_data","PG::Connection","PG/Connection.html#method-i-put_copy_data","(p1, p2 = v2)","<p>Transmits <em>buffer</em> as copy data to the server. Returns true if the\ndata was sent, false if it was not sent …\n"],["put_copy_end","PG::Connection","PG/Connection.html#method-i-put_copy_end","(p1 = v1)","<p>Sends end-of-data indication to the server.\n<p><em>error_message</em> is an optional parameter, and if set, forces …\n"],["query","PG::Connection","PG/Connection.html#method-i-query","(*args)",""],["quote_connstr","PG::Connection","PG/Connection.html#method-c-quote_connstr","( value )","<p>Quote the given <code>value</code> for use in a connection-parameter\nstring.\n"],["quote_ident","PG::Connection","PG/Connection.html#method-c-quote_ident","(p1)","<p>Returns a string that is safe for inclusion in a SQL query as an\nidentifier. Note: this is not a quote …\n"],["quote_ident","PG::Connection","PG/Connection.html#method-i-quote_ident","(p1)","<p>Returns a string that is safe for inclusion in a SQL query as an\nidentifier. Note: this is not a quote …\n"],["quotelist","PG::TestingHelpers","PG/TestingHelpers.html#method-i-quotelist","( *args )","<p>Return the specified args as a string, quoting any that have a space.\n"],["register_type","PG::BasicTypeRegistry","PG/BasicTypeRegistry.html#method-c-register_type","(format, name, encoder_class, decoder_class)","<p>Register an OID type named <code>name</code> with a typecasting encoder and\ndecoder object in <code>type</code>.  <code>name</code> should correspond …\n"],["res_status","PG::Result","PG/Result.html#method-i-res_status","(p1)","<p>Returns the string representation of status <code>status</code>.\n"],["reset","PG::Connection","PG/Connection.html#method-i-reset","()","<p>Resets the backend connection. This method closes the backend connection\nand tries to re-connect.\n"],["reset_poll","PG::Connection","PG/Connection.html#method-i-reset_poll","()","<p>Checks the status of a connection reset operation. See #connect_start and\n#connect_poll for usage information …\n"],["reset_start","PG::Connection","PG/Connection.html#method-i-reset_start","()","<p>Initiate a connection reset in a nonblocking manner. This will close the\ncurrent connection and attempt …\n"],["result_error_field","PG::Result","PG/Result.html#method-i-result_error_field","(p1)",""],["result_error_message","PG::Result","PG/Result.html#method-i-result_error_message","()",""],["result_status","PG::Result","PG/Result.html#method-i-result_status","()","<p>Returns the status of the query. The status value is one of:\n<p><code>PGRES_EMPTY_QUERY</code>\n<p><code>PGRES_COMMAND_OK</code>\n"],["result_typenames","PG::TestingHelpers","PG/TestingHelpers.html#method-i-result_typenames","(res)","<p>Retrieve the names of the column types of a given result set.\n"],["rm_coder","PG::TypeMapByOid","PG/TypeMapByOid.html#method-i-rm_coder","(p1, p2)","<p>Removes a PG::Coder object from the type map based on the given oid and\nformat codes.\n<p>Returns the removed …\n"],["role_params","RolesController","RolesController.html#method-i-role_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["run","PG::TestingHelpers","PG/TestingHelpers.html#method-i-run","( *cmd )","<p>Run the specified command <code>cmd</code> with system(), failing if the\nexecution fails.\n"],["seguimiento_params","SeguimientosController","SeguimientosController.html#method-i-seguimiento_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["send_describe_portal","PG::Connection","PG/Connection.html#method-i-send_describe_portal","(p1)","<p>Asynchronously send <em>command</em> to the server. Does not block. Use in\ncombination with <code>conn.get_result</code>.\n"],["send_describe_prepared","PG::Connection","PG/Connection.html#method-i-send_describe_prepared","(p1)","<p>Asynchronously send <em>command</em> to the server. Does not block. Use in\ncombination with <code>conn.get_result</code>.\n"],["send_prepare","PG::Connection","PG/Connection.html#method-i-send_prepare","(p1, p2, p3 = v3)","<p>Prepares statement <em>sql</em> with name <em>name</em> to be executed\nlater. Sends prepare command asynchronously, and …\n"],["send_query","PG::Connection","PG/Connection.html#method-i-send_query","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Sends SQL query request specified by <em>sql</em> to PostgreSQL for\nasynchronous processing, and immediately returns. …\n"],["send_query_prepared","PG::Connection","PG/Connection.html#method-i-send_query_prepared","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Execute prepared named statement specified by <em>statement_name</em>\nasynchronously, and returns immediately. …\n"],["server_version","PG::Connection","PG/Connection.html#method-i-server_version","()","<p>The number is formed by converting the major, minor, and revision numbers\ninto two-decimal-digit numbers …\n"],["set_adjunto","AdjuntosController","AdjuntosController.html#method-i-set_adjunto","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_area","AreasController","AreasController.html#method-i-set_area","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_client_encoding","PG::Connection","PG/Connection.html#method-i-set_client_encoding","(p1)","<p>Sets the client encoding to the <em>encoding</em> String.\n"],["set_default_encoding","PG::Connection","PG/Connection.html#method-i-set_default_encoding","()","<p>If Ruby has its Encoding.default_internal set, set PostgreSQL&#39;s\nclient_encoding to match. Returns …\n"],["set_error_verbosity","PG::Connection","PG/Connection.html#method-i-set_error_verbosity","(p1)","<p>Sets connection&#39;s verbosity to <em>verbosity</em> and returns the\nprevious setting. Available settings are: …\n"],["set_estado","EstadosController","EstadosController.html#method-i-set_estado","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_notice_processor","PG::Connection","PG/Connection.html#method-i-set_notice_processor","()","<p>See #set_notice_receiver for the desription of what this and the\nnotice_processor methods do.\n<p>This function …\n"],["set_notice_receiver","PG::Connection","PG/Connection.html#method-i-set_notice_receiver","()","<p>Notice and warning messages generated by the server are not returned by the\nquery execution functions, …\n"],["set_notificacione","NotificacionesController","NotificacionesController.html#method-i-set_notificacione","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_parametro","ParametrosController","ParametrosController.html#method-i-set_parametro","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_permiso","PermisosController","PermisosController.html#method-i-set_permiso","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_role","RolesController","RolesController.html#method-i-set_role","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_seguimiento","SeguimientosController","SeguimientosController.html#method-i-set_seguimiento","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_single_row_mode","PG::Connection","PG/Connection.html#method-i-set_single_row_mode","()","<p>To enter single-row mode, call this method immediately after a successful\ncall of send_query (or a sibling …\n"],["set_solicitud","SolicitudsController","SolicitudsController.html#method-i-set_solicitud","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_tipo_notificacione","TipoNotificacionesController","TipoNotificacionesController.html#method-i-set_tipo_notificacione","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_tipo_seguimiento","TipoSeguimientosController","TipoSeguimientosController.html#method-i-set_tipo_seguimiento","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_tipo_solicitude","TipoSolicitudesController","TipoSolicitudesController.html#method-i-set_tipo_solicitude","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["set_user","UsersController","UsersController.html#method-i-set_user","()","<p>Use callbacks to share common setup or constraints between actions.\n"],["setnonblocking","PG::Connection","PG/Connection.html#method-i-setnonblocking","(p1)","<p>Sets the nonblocking status of the connection. In the blocking state, calls\nto #send_query will block …\n"],["setup_testing_db","PG::TestingHelpers","PG/TestingHelpers.html#method-i-setup_testing_db","( description )","<p>Set up a PostgreSQL database instance for testing.\n"],["show","AdjuntosController","AdjuntosController.html#method-i-show","()","<p>GET /adjuntos/1 GET /adjuntos/1.json\n"],["show","AreasController","AreasController.html#method-i-show","()","<p>GET /areas/1 GET /areas/1.json\n"],["show","EstadosController","EstadosController.html#method-i-show","()","<p>GET /estados/1 GET /estados/1.json\n"],["show","NotificacionesController","NotificacionesController.html#method-i-show","()","<p>GET /notificaciones/1 GET /notificaciones/1.json\n"],["show","ParametrosController","ParametrosController.html#method-i-show","()","<p>GET /parametros/1 GET /parametros/1.json\n"],["show","PermisosController","PermisosController.html#method-i-show","()","<p>GET /permisos/1 GET /permisos/1.json\n"],["show","RolesController","RolesController.html#method-i-show","()","<p>GET /roles/1 GET /roles/1.json\n"],["show","SeguimientosController","SeguimientosController.html#method-i-show","()","<p>GET /seguimientos/1 GET /seguimientos/1.json\n"],["show","SolicitudsController","SolicitudsController.html#method-i-show","()","<p>GET /solicituds/1 GET /solicituds/1.json\n"],["show","TipoNotificacionesController","TipoNotificacionesController.html#method-i-show","()","<p>GET /tipo_notificaciones/1 GET /tipo_notificaciones/1.json\n"],["show","TipoSeguimientosController","TipoSeguimientosController.html#method-i-show","()","<p>GET /tipo_seguimientos/1 GET /tipo_seguimientos/1.json\n"],["show","TipoSolicitudesController","TipoSolicitudesController.html#method-i-show","()","<p>GET /tipo_solicitudes/1 GET /tipo_solicitudes/1.json\n"],["show","UsersController","UsersController.html#method-i-show","()","<p>GET /users/1 GET /users/1.json\n"],["socket","PG::Connection","PG/Connection.html#method-i-socket","()","<p>This method is deprecated. Please use the more portable method #socket_io .\n<p>Returns the socket&#39;s file …\n"],["socket_io","PG::Connection","PG/Connection.html#method-i-socket_io","()","<p>Fetch a memorized IO object created from the Connection&#39;s underlying\nsocket. This object can be used …\n"],["solicitud_params","SolicitudsController","SolicitudsController.html#method-i-solicitud_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["ssl_attribute","PG::Connection","PG/Connection.html#method-i-ssl_attribute","(p1)","<p>Returns SSL-related information about the connection.\n<p>The list of available attributes varies depending …\n"],["ssl_attribute_names","PG::Connection","PG/Connection.html#method-i-ssl_attribute_names","()","<p>Return an array of SSL attribute names available.\n<p>See also #ssl_attribute\n<p>Available since PostgreSQL-9.5 …\n"],["ssl_attributes","PG::Connection","PG/Connection.html#method-i-ssl_attributes","()","<p>Returns SSL-related information about the connection as key/value pairs\n<p>The available attributes varies …\n"],["ssl_in_use?","PG::Connection","PG/Connection.html#method-i-ssl_in_use-3F","()","<p>Returns <code>true</code> if the connection uses SSL, <code>false</code> if\nnot.\n<p>Available since PostgreSQL-9.5\n"],["status","PG::Connection","PG/Connection.html#method-i-status","()","<p>Returns status of connection : CONNECTION_OK or CONNECTION_BAD\n"],["still_be_usable","PG::TestingHelpers","PG/TestingHelpers.html#method-i-still_be_usable","()","<p>Return a ConnStillUsableMatcher to be used like:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">expect</span>( <span class=\"ruby-identifier\">pg_conn</span> ).<span class=\"ruby-identifier\">to</span> <span class=\"ruby-identifier\">still_be_usable</span>\n</pre>\n"],["stop_existing_postmasters","PG::TestingHelpers","PG/TestingHelpers.html#method-i-stop_existing_postmasters","()","<p>Check the current directory for directories that look like they&#39;re\ntesting directories from previous …\n"],["stream_each","PG::Result","PG/Result.html#method-i-stream_each","()","<p>Invokes block for each tuple in the result set in single row mode.\n<p>This is a convenience method for retrieving …\n"],["stream_each_row","PG::Result","PG/Result.html#method-i-stream_each_row","()","<p>Yields each row of the result set in single row mode. The row is a list of\ncolumn values.\n<p>This method …\n"],["supports_ranges?","PG::BasicTypeRegistry","PG/BasicTypeRegistry.html#method-i-supports_ranges-3F","(connection)",""],["system!","Object","Object.html#method-i-system-21","(*args)",""],["teardown_testing_db","PG::TestingHelpers","PG/TestingHelpers.html#method-i-teardown_testing_db","( conn )",""],["tipo_notificacione_params","TipoNotificacionesController","TipoNotificacionesController.html#method-i-tipo_notificacione_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["tipo_seguimiento_params","TipoSeguimientosController","TipoSeguimientosController.html#method-i-tipo_seguimiento_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["tipo_solicitude_params","TipoSolicitudesController","TipoSolicitudesController.html#method-i-tipo_solicitude_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["to_h","PG::Coder","PG/Coder.html#method-i-to_h","()","<p>Returns coder attributes as Hash.\n"],["to_h","PG::CompositeCoder","PG/CompositeCoder.html#method-i-to_h","()",""],["to_h","PG::CopyCoder","PG/CopyCoder.html#method-i-to_h","()",""],["trace","PG::Connection","PG/Connection.html#method-i-trace","(p1)","<p>Enables tracing message passing between backend. The trace message will be\nwritten to the stream <em>stream</em> …\n"],["trace","PG::TestingHelpers","PG/TestingHelpers.html#method-i-trace","( *msg )","<p>Output a logging message if $VERBOSE is true\n"],["transaction","PG::Connection","PG/Connection.html#method-i-transaction","()","<p>Executes a <code>BEGIN</code> at the start of the block, and a\n<code>COMMIT</code> at the end of the block, or <code>ROLLBACK</code> if\nany …\n"],["transaction_status","PG::Connection","PG/Connection.html#method-i-transaction_status","()","<p>returns one of the following statuses:\n\n<pre>PQTRANS_IDLE    = 0 (connection idle)\nPQTRANS_ACTIVE  = 1 (command ...</pre>\n"],["tty","PG::Connection","PG/Connection.html#method-i-tty","()","<p>Returns the connected pgtty. (Obsolete)\n"],["type_map","PG::CopyCoder","PG/CopyCoder.html#method-i-type_map","()",""],["type_map","PG::Result","PG/Result.html#method-i-type_map","()","<p>Returns the TypeMap that is currently set for type casts of result values\nto ruby objects.\n"],["type_map=","PG::CopyCoder","PG/CopyCoder.html#method-i-type_map-3D","(p1)","<p><code>map</code> must be a kind of PG::TypeMap .\n<p>Defaults to a PG::TypeMapAllStrings , so that PG::TextEncoder::String …\n"],["type_map=","PG::Result","PG/Result.html#method-i-type_map-3D","(p1)","<p>Set the TypeMap that is used for type casts of result values to ruby\nobjects.\n<p>All value retrieval methods …\n"],["type_map_for_queries","PG::Connection","PG/Connection.html#method-i-type_map_for_queries","()","<p>Returns the default TypeMap that is currently set for type casts of query\nbind parameters.\n"],["type_map_for_queries=","PG::Connection","PG/Connection.html#method-i-type_map_for_queries-3D","(p1)","<p>Set the default TypeMap that is used for type casts of query bind\nparameters.\n<p><code>typemap</code> must be a kind of …\n"],["type_map_for_results","PG::Connection","PG/Connection.html#method-i-type_map_for_results","()","<p>Returns the default TypeMap that is currently set for type casts of result\nvalues.\n"],["type_map_for_results=","PG::Connection","PG/Connection.html#method-i-type_map_for_results-3D","(p1)","<p>Set the default TypeMap that is used for type casts of result values.\n<p><code>typemap</code> must be a kind of PG::TypeMap …\n"],["typecast_copy_get","Object","Object.html#method-i-typecast_copy_get","(field_str, fieldno, format, enc)",""],["typecast_copy_get","PG::TypeMapInRuby","PG/TypeMapInRuby.html#method-i-typecast_copy_get","(p1, p2, p3, p4)","<p>Cast a field string received by PG::Connection#get_copy_data.\n<p>This method implementation uses the #default_type_map …\n"],["typecast_query_param","Object","Object.html#method-i-typecast_query_param","(*args)",""],["typecast_query_param","PG::TypeMapInRuby","PG/TypeMapInRuby.html#method-i-typecast_query_param","(p1, p2)","<p>Cast a field string for transmission to the server.\n<p>This method implementation uses the #default_type_map …\n"],["typecast_result_value","Object","Object.html#method-i-typecast_result_value","(*args)",""],["typecast_result_value","PG::BasicTypeMapForResults::WarningTypeMap","PG/BasicTypeMapForResults/WarningTypeMap.html#method-i-typecast_result_value","(result, _tuple, field)",""],["typecast_result_value","PG::TypeMapInRuby","PG/TypeMapInRuby.html#method-i-typecast_result_value","(p1, p2, p3)","<p>Retrieve and cast a field of the given result.\n<p>This method implementation uses the #default_type_map to …\n"],["unescape_bytea","PG::Connection","PG/Connection.html#method-c-unescape_bytea","(p1)","<p>Converts an escaped string representation of binary data into binary data —\nthe reverse of #escape_bytea …\n"],["unescape_bytea","PG::Connection","PG/Connection.html#method-i-unescape_bytea","(p1)","<p>Converts an escaped string representation of binary data into binary data —\nthe reverse of #escape_bytea …\n"],["untrace","PG::Connection","PG/Connection.html#method-i-untrace","()","<p>Disables the message tracing.\n"],["update","AdjuntosController","AdjuntosController.html#method-i-update","()","<p>PATCH/PUT /adjuntos/1 PATCH/PUT /adjuntos/1.json\n"],["update","AreasController","AreasController.html#method-i-update","()","<p>PATCH/PUT /areas/1 PATCH/PUT /areas/1.json\n"],["update","EstadosController","EstadosController.html#method-i-update","()","<p>PATCH/PUT /estados/1 PATCH/PUT /estados/1.json\n"],["update","NotificacionesController","NotificacionesController.html#method-i-update","()","<p>PATCH/PUT /notificaciones/1 PATCH/PUT /notificaciones/1.json\n"],["update","ParametrosController","ParametrosController.html#method-i-update","()","<p>PATCH/PUT /parametros/1 PATCH/PUT /parametros/1.json\n"],["update","PermisosController","PermisosController.html#method-i-update","()","<p>PATCH/PUT /permisos/1 PATCH/PUT /permisos/1.json\n"],["update","RolesController","RolesController.html#method-i-update","()","<p>PATCH/PUT /roles/1 PATCH/PUT /roles/1.json\n"],["update","SeguimientosController","SeguimientosController.html#method-i-update","()","<p>PATCH/PUT /seguimientos/1 PATCH/PUT /seguimientos/1.json\n"],["update","SolicitudsController","SolicitudsController.html#method-i-update","()","<p>PATCH/PUT /solicituds/1 PATCH/PUT /solicituds/1.json\n"],["update","TipoNotificacionesController","TipoNotificacionesController.html#method-i-update","()","<p>PATCH/PUT /tipo_notificaciones/1 PATCH/PUT /tipo_notificaciones/1.json\n"],["update","TipoSeguimientosController","TipoSeguimientosController.html#method-i-update","()","<p>PATCH/PUT /tipo_seguimientos/1 PATCH/PUT /tipo_seguimientos/1.json\n"],["update","TipoSolicitudesController","TipoSolicitudesController.html#method-i-update","()","<p>PATCH/PUT /tipo_solicitudes/1 PATCH/PUT /tipo_solicitudes/1.json\n"],["update","UsersController","UsersController.html#method-i-update","()","<p>PATCH/PUT /users/1 PATCH/PUT /users/1.json\n"],["user","PG::Connection","PG/Connection.html#method-i-user","()","<p>Returns the authenticated user name.\n"],["user_params","UsersController","UsersController.html#method-i-user_params","()","<p>Never trust parameters from the scary internet, only allow the white list\nthrough.\n"],["validate_login","SolicitudsController","SolicitudsController.html#method-i-validate_login","()",""],["values","PG::Result","PG/Result.html#method-i-values","()","<p>Returns all tuples as an array of arrays.\n"],["version_string","PG","PG.html#method-c-version_string","( include_buildnum=false )","<p>Get the PG library version. If <code>include_buildnum</code> is\n<code>true</code>, include the build ID.\n"],["wait_for_notify","PG::Connection","PG/Connection.html#method-i-wait_for_notify","(p1 = v1)","<p>Blocks while waiting for notification(s), or until the optional\n<em>timeout</em> is reached, whichever comes first. …\n"],["with_default_type_map","PG::TypeMap::DefaultTypeMappable","PG/TypeMap/DefaultTypeMappable.html#method-i-with_default_type_map","(p1)","<p>Set the default TypeMap that is used for values that could not be casted by\nthis type map.\n<p><code>typemap</code> must …\n"],["Diagrama de Estados.mdj","","Diagrama de Estados_mdj.html","","<p>{\n\n<pre>&quot;_type&quot;: &quot;Project&quot;,\n&quot;_id&quot;: &quot;AAAAAAFF+h6SjaM2Hec=&quot;,\n&quot;name&quot;: &quot;Untitled&quot;,\n&quot;ownedElements&quot;: [\n        { ...</pre>\n"],["Gemfile","","Gemfile.html","","<p>source &#39;rubygems.org&#39; git_source(:github) { |repo|\n“github.com/#{repo}.git” }\n<p>ruby &#39;2.5.1&#39; …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  actioncable (5.2.0)\n    actionpack (= 5.2.0)\n    nio4r (~&gt; ...</pre>\n"],["README","","README_md.html","","<p>README\n<p>This README would normally document whatever steps are necessary to get\nthe\napplication up and ...\n"],["Rakefile","","Rakefile.html","","<p># Add your own tasks in files placed in lib/tasks ending in .rake, # for\nexample lib/tasks/capistrano.rake …\n"],["manifest.js","","app/assets/config/manifest_js.html","","<p>//= link_tree ../images //= link_directory ../javascripts .js //=\nlink_directory ../stylesheets .css …\n"],["adjuntos.coffee","","app/assets/javascripts/adjuntos_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["application.js","","app/assets/javascripts/application_js.html","","<p>// This is a manifest file that&#39;ll be compiled into application.js,\nwhich will include all the files …\n"],["areas.coffee","","app/assets/javascripts/areas_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["bootstrap.js.coffee","","app/assets/javascripts/bootstrap_js_coffee.html","","<p>jQuery -&gt;\n\n<pre>$(&quot;a[rel~=popover], .has-popover&quot;).popover()\n$(&quot;a[rel~=tooltip], .has-tooltip&quot;).tooltip()</pre>\n"],["cable.js","","app/assets/javascripts/cable_js.html","","<p>// Action Cable provides the framework to deal with WebSockets in Rails. //\nYou can generate new channels …\n"],["estados.coffee","","app/assets/javascripts/estados_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["notificaciones.coffee","","app/assets/javascripts/notificaciones_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["parametros.coffee","","app/assets/javascripts/parametros_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["permisos.coffee","","app/assets/javascripts/permisos_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["roles.coffee","","app/assets/javascripts/roles_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["seguimientos.coffee","","app/assets/javascripts/seguimientos_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["solicituds.coffee","","app/assets/javascripts/solicituds_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["tipo_notificaciones.coffee","","app/assets/javascripts/tipo_notificaciones_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["tipo_seguimientos.coffee","","app/assets/javascripts/tipo_seguimientos_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["tipo_solicitudes.coffee","","app/assets/javascripts/tipo_solicitudes_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["users.coffee","","app/assets/javascripts/users_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["welcome.coffee","","app/assets/javascripts/welcome_coffee.html","","<p>Place all the behaviors and hooks related to the matching controller here.\nAll this logic will automatically …\n"],["adjuntos.scss","","app/assets/stylesheets/adjuntos_scss.html","","<p>// Place all the styles related to the adjuntos controller here. // They\nwill automatically be included …\n"],["application.css","","app/assets/stylesheets/application_css.html","","\n<pre>This is a manifest file that&#39;ll automatically include all the stylesheets available in this directory ...</pre>\n"],["areas.scss","","app/assets/stylesheets/areas_scss.html","","<p>// Place all the styles related to the areas controller here. // They will\nautomatically be included …\n"],["bootstrap_and_overrides.css","","app/assets/stylesheets/bootstrap_and_overrides_css.html","","<p>require twitter-bootstrap-static/bootstrap\n<p>Static version of css will use Glyphicons sprites by default …\n"],["bootstrap_and_overrides.css.less","","app/assets/stylesheets/bootstrap_and_overrides_css_less.html","","<p>@import “twitter/bootstrap/bootstrap”;\n<p>// Glyphicons are not required by default, uncomment …\n"],["estados.scss","","app/assets/stylesheets/estados_scss.html","","<p>// Place all the styles related to the estados controller here. // They\nwill automatically be included …\n"],["flexboxgrid.css","","app/assets/stylesheets/flexboxgrid_css.html","","<p>.container-fluid, .container {\n\n<pre>margin-right: auto;\nmargin-left: auto;</pre>\n<p>}\n"],["notificaciones.scss","","app/assets/stylesheets/notificaciones_scss.html","","<p>// Place all the styles related to the notificaciones controller here. //\nThey will automatically be …\n"],["parametros.scss","","app/assets/stylesheets/parametros_scss.html","","<p>// Place all the styles related to the parametros controller here. // They\nwill automatically be included …\n"],["permisos.scss","","app/assets/stylesheets/permisos_scss.html","","<p>// Place all the styles related to the permisos controller here. // They\nwill automatically be included …\n"],["roles.scss","","app/assets/stylesheets/roles_scss.html","","<p>// Place all the styles related to the roles controller here. // They will\nautomatically be included …\n"],["scaffolds.scss","","app/assets/stylesheets/scaffolds_scss.html","","<p>body {\n\n<pre>background-color: #fff;\ncolor: #333;\nmargin: 33px;\nfont-family: verdana, arial, helvetica, sans-serif; ...</pre>\n"],["seguimientos.scss","","app/assets/stylesheets/seguimientos_scss.html","","<p>// Place all the styles related to the seguimientos controller here. //\nThey will automatically be included …\n"],["solicituds.scss","","app/assets/stylesheets/solicituds_scss.html","","<p>// Place all the styles related to the solicituds controller here. // They\nwill automatically be included …\n"],["style.scss","","app/assets/stylesheets/style_scss.html","","<p>html,body{\n\n<pre>margin: 0px;</pre>\n<p>} .btn{\n"],["tipo_notificaciones.scss","","app/assets/stylesheets/tipo_notificaciones_scss.html","","<p>// Place all the styles related to the tipo_notificaciones controller here.\n// They will automatically …\n"],["tipo_seguimientos.scss","","app/assets/stylesheets/tipo_seguimientos_scss.html","","<p>// Place all the styles related to the tipo_seguimientos controller here.\n// They will automatically …\n"],["tipo_solicitudes.scss","","app/assets/stylesheets/tipo_solicitudes_scss.html","","<p>// Place all the styles related to the tipo_solicitudes controller here. //\nThey will automatically be …\n"],["users.scss","","app/assets/stylesheets/users_scss.html","","<p>// Place all the styles related to the users controller here. // They will\nautomatically be included …\n"],["welcome.scss","","app/assets/stylesheets/welcome_scss.html","","<p>// Place all the styles related to the welcome controller here. // They\nwill automatically be included …\n"],["_adjunto.json.jbuilder","","app/views/adjuntos/_adjunto_json_jbuilder.html","","<p>json.extract! adjunto, :id, :nombre, :extension, :created_at, :updated_at\njson.url adjunto_url(adjunto, …\n"],["index.json.jbuilder","","app/views/adjuntos/index_json_jbuilder.html","","<p>json.array! @adjuntos, partial: &#39;adjuntos/adjunto&#39;, as: :adjunto\n"],["show.json.jbuilder","","app/views/adjuntos/show_json_jbuilder.html","","<p>json.partial! “adjuntos/adjunto”, adjunto: @adjunto\n"],["_area.json.jbuilder","","app/views/areas/_area_json_jbuilder.html","","<p>json.extract! area, :id, :nombre_area, :telefono_area, :created_at,\n:updated_at json.url area_url(area, …\n"],["index.json.jbuilder","","app/views/areas/index_json_jbuilder.html","","<p>json.array! @areas, partial: &#39;areas/area&#39;, as: :area\n"],["show.json.jbuilder","","app/views/areas/show_json_jbuilder.html","","<p>json.partial! “areas/area”, area: @area\n"],["_estado.json.jbuilder","","app/views/estados/_estado_json_jbuilder.html","","<p>json.extract! estado, :id, :nombre, :created_at, :updated_at json.url\nestado_url(estado, format: :json) …\n"],["index.json.jbuilder","","app/views/estados/index_json_jbuilder.html","","<p>json.array! @estados, partial: &#39;estados/estado&#39;, as: :estado\n"],["show.json.jbuilder","","app/views/estados/show_json_jbuilder.html","","<p>json.partial! “estados/estado”, estado: @estado\n"],["_notificacione.json.jbuilder","","app/views/notificaciones/_notificacione_json_jbuilder.html","","<p>json.extract! notificacione, :id, :mensaje, :fecha, :id_tipo_notificacion,\n:created_at, :updated_at  …\n"],["index.json.jbuilder","","app/views/notificaciones/index_json_jbuilder.html","","<p>json.array! @notificaciones, partial:\n&#39;notificaciones/notificacione&#39;, as: :notificacione\n"],["show.json.jbuilder","","app/views/notificaciones/show_json_jbuilder.html","","<p>json.partial! “notificaciones/notificacione”, notificacione: @notificacione\n"],["_parametro.json.jbuilder","","app/views/parametros/_parametro_json_jbuilder.html","","<p>json.extract! parametro, :id, :nombre, :descripcion, :tiempo_respuesta,\n:medio, :created_at, :updated_at …\n"],["index.json.jbuilder","","app/views/parametros/index_json_jbuilder.html","","<p>json.array! @parametros, partial: &#39;parametros/parametro&#39;, as:\n:parametro\n"],["show.json.jbuilder","","app/views/parametros/show_json_jbuilder.html","","<p>json.partial! “parametros/parametro”, parametro: @parametro\n"],["_permiso.json.jbuilder","","app/views/permisos/_permiso_json_jbuilder.html","","<p>json.extract! permiso, :id, :tipo_permiso, :descripcion, :created_at,\n:updated_at json.url permiso_url …\n"],["index.json.jbuilder","","app/views/permisos/index_json_jbuilder.html","","<p>json.array! @permisos, partial: &#39;permisos/permiso&#39;, as: :permiso\n"],["show.json.jbuilder","","app/views/permisos/show_json_jbuilder.html","","<p>json.partial! “permisos/permiso”, permiso: @permiso\n"],["_role.json.jbuilder","","app/views/roles/_role_json_jbuilder.html","","<p>json.extract! role, :id, :nombre_rol, :id_area, :id_usuario, :created_at,\n:updated_at json.url role_url …\n"],["index.json.jbuilder","","app/views/roles/index_json_jbuilder.html","","<p>json.array! @roles, partial: &#39;roles/role&#39;, as: :role\n"],["show.json.jbuilder","","app/views/roles/show_json_jbuilder.html","","<p>json.partial! “roles/role”, role: @role\n"],["_seguimiento.json.jbuilder","","app/views/seguimientos/_seguimiento_json_jbuilder.html","","<p>json.extract! seguimiento, :id, :descripcion, :fecha, :hora,\n:id_tipo_seguimiento, :created_at, :updated_at …\n"],["index.json.jbuilder","","app/views/seguimientos/index_json_jbuilder.html","","<p>json.array! @seguimientos, partial: &#39;seguimientos/seguimiento&#39;, as:\n:seguimiento\n"],["show.json.jbuilder","","app/views/seguimientos/show_json_jbuilder.html","","<p>json.partial! “seguimientos/seguimiento”, seguimiento: @seguimiento\n"],["_solicitud.json.jbuilder","","app/views/solicituds/_solicitud_json_jbuilder.html","","<p>json.extract! solicitud, :id, :descripcion, :fecha_solicitud, :hora,\n:idtipo_solicitud, :id_usuario, …\n"],["index.json.jbuilder","","app/views/solicituds/index_json_jbuilder.html","","<p>json.array! @solicituds, partial: &#39;solicituds/solicitud&#39;, as:\n:solicitud\n"],["show.json.jbuilder","","app/views/solicituds/show_json_jbuilder.html","","<p>json.partial! “solicituds/solicitud”, solicitud: @solicitud\n"],["_tipo_notificacione.json.jbuilder","","app/views/tipo_notificaciones/_tipo_notificacione_json_jbuilder.html","","<p>json.extract! tipo_notificacione, :id, :nombre, :descripcion, :icono,\n:created_at, :updated_at json.url …\n"],["index.json.jbuilder","","app/views/tipo_notificaciones/index_json_jbuilder.html","","<p>json.array! @tipo_notificaciones, partial:\n&#39;tipo_notificaciones/tipo_notificacione&#39;, as: :tipo_notificacione …\n"],["show.json.jbuilder","","app/views/tipo_notificaciones/show_json_jbuilder.html","","<p>json.partial! “tipo_notificaciones/tipo_notificacione”, tipo_notificacione:\n@tipo_notificacione …\n"],["_tipo_seguimiento.json.jbuilder","","app/views/tipo_seguimientos/_tipo_seguimiento_json_jbuilder.html","","<p>json.extract! tipo_seguimiento, :id, :nombre, :created_at, :updated_at\njson.url tipo_seguimiento_url …\n"],["index.json.jbuilder","","app/views/tipo_seguimientos/index_json_jbuilder.html","","<p>json.array! @tipo_seguimientos, partial:\n&#39;tipo_seguimientos/tipo_seguimiento&#39;, as: :tipo_seguimiento …\n"],["show.json.jbuilder","","app/views/tipo_seguimientos/show_json_jbuilder.html","","<p>json.partial! “tipo_seguimientos/tipo_seguimiento”, tipo_seguimiento:\n@tipo_seguimiento\n"],["_tipo_solicitude.json.jbuilder","","app/views/tipo_solicitudes/_tipo_solicitude_json_jbuilder.html","","<p>json.extract! tipo_solicitude, :id, :nombre_tipo, :id_parametros,\n:created_at, :updated_at json.url  …\n"],["index.json.jbuilder","","app/views/tipo_solicitudes/index_json_jbuilder.html","","<p>json.array! @tipo_solicitudes, partial:\n&#39;tipo_solicitudes/tipo_solicitude&#39;, as: :tipo_solicitude …\n"],["show.json.jbuilder","","app/views/tipo_solicitudes/show_json_jbuilder.html","","<p>json.partial! “tipo_solicitudes/tipo_solicitude”, tipo_solicitude:\n@tipo_solicitude\n"],["_user.json.jbuilder","","app/views/users/_user_json_jbuilder.html","","<p>json.extract! user, :id, :nombre, :apellido, :telefono, :direccion, :email,\n:tipo_identificacion, :identificacion, …\n"],["index.json.jbuilder","","app/views/users/index_json_jbuilder.html","","<p>json.array! @users, partial: &#39;users/user&#39;, as: :user\n"],["show.json.jbuilder","","app/views/users/show_json_jbuilder.html","","<p>json.partial! “users/user”, user: @user\n"],["config.ru","","config_ru.html","","<p># This file is used by Rack-based servers to start the application.\n<p>require_relative &#39;config/environment&#39; …\n"],["credentials.yml.enc","","config/credentials_yml_enc.html","","<p>vPgkHgHoXtLKEY252kHXHYDNzqJiTYazd3U3jGfGVr+/q/qlA1BYE1RXdVqJ+lsUwnERBWbxyF47hvW7TZdMCbrr8kF0tgf5A9OC5cmJUFP7rNn0/eA9A69wYZPjXsFIb5rLwLjCEZ955QTq4Kn6YQoFStp+5JCoiNg1WLljmjiOL7RuMksg18NPvUbWNshn9MiMuSuQ0iNpT1TrKdccW97QBaaqxDQxAS7E8c9qFRxC7Zjo+Crj95JlycwSvlvAwhsjw+4phlij7rlCRLy7aAGuzcyW4mZNkUKlo8ZM7c1Fy7sY/c9lgpEKbcK9HWrzqpgZFOOCjV4OI5ER6nD3Xdglr52e9BD04OvoO7mnlHO+iqubA9xZLhzAUJ8V5P3zEIMvc1TLl6nfU3sXhFWh1KNy4vrWPCY+hZMm–ZlDpyRT68ANkSmpJ–HptDItbMYF9JgpwlqCIRnw==\n…\n"],["master.key","","config/master_key.html","","<p>44df8461a769d20c13495fa8f20b5dbe\n"],["development.log","","log/development_log.html","","\n<pre>\u001b[1m\u001b[35m (0.1ms)\u001b[0m  \u001b[1m\u001b[34mSELECT sqlite_version(*)\u001b[0m\n↳ bin/rails:9\n\u001b[1m\u001b[35m (115.7ms)\u001b[0m  \u001b[1m\u001b[35mCREATE ...</pre>\n"],["package.json","","package_json.html","","<p>{\n\n<pre>&quot;name&quot;: &quot;modeloPQR&quot;,\n&quot;private&quot;: true,\n&quot;dependencies&quot;: {}</pre>\n<p>}\n"],["404.html","","public/404_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The page you were looking for doesn&#39;t exist (404)&lt;/title&gt; ...</pre>\n"],["422.html","","public/422_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;The change you wanted was rejected (422)&lt;/title&gt; ...</pre>\n"],["500.html","","public/500_html.html","","<p>&lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt;\n\n<pre>&lt;title&gt;We&#39;re sorry, but something went wrong (500)&lt;/title&gt; ...</pre>\n"],["apple-touch-icon-precomposed.png","","public/apple-touch-icon-precomposed_png.html","",""],["apple-touch-icon.png","","public/apple-touch-icon_png.html","",""],["favicon.ico","","public/favicon_ico.html","",""],["robots","","public/robots_txt.html","","<p>See www.robotstxt.org/robotstxt.html for documentation on how to use the\nrobots.txt file\n"],["gem_make.out","","th-pg-include/extensions/x86_64-linux/2_5_0-static/pg-1_0_0/gem_make_out.html","","<p>current directory:\n/home/ivan/Escritorio/Ruby_s1/pruebaruby/modeloPQR/th-pg-include/gems/pg-1.0.0/ext\n…\n"],["mkmf.log","","th-pg-include/extensions/x86_64-linux/2_5_0-static/pg-1_0_0/mkmf_log.html","","<p>find_executable: checking for pg_config… ——————– no\n<p>find_header: checking for libpq-fe.h… …\n"],["BSDL","","th-pg-include/gems/pg-1_0_0/BSDL.html","","<p>Copyright (C) 1993-2013 Yukihiro Matsumoto. All rights reserved.\n<p>Redistribution and use in source and …\n"],["ChangeLog","","th-pg-include/gems/pg-1_0_0/ChangeLog.html","","<p>ChangeLog\n<p>2017-06-12\n<p>2017-06-12  Michael Granger  &lt;ged@FaerieMUD.org&gt;\n"],["Contributors","","th-pg-include/gems/pg-1_0_0/Contributors_rdoc.html","","<p>Thanks to all the great people that have contributed code, suggestions, and\npatches through the years. …\n"],["History","","th-pg-include/gems/pg-1_0_0/History_rdoc.html","","<p>v1.0.0 [2018-01-10] Michael Granger &lt;ged@FaerieMUD.org&gt;\n<p>Deprecated:\n<p>Deprecate Ruby older than 2.2. …\n"],["LICENSE","","th-pg-include/gems/pg-1_0_0/LICENSE.html","","<p>Ruby is copyrighted free software by Yukihiro Matsumoto\n&lt;matz@netlab.jp&gt;. You can redistribute …\n"],["Manifest","","th-pg-include/gems/pg-1_0_0/Manifest_txt.html","","<p>.gemtest BSDL ChangeLog Contributors.rdoc History.rdoc LICENSE Manifest.txt\nPOSTGRES README-OS_X.rdoc …\n"],["POSTGRES","","th-pg-include/gems/pg-1_0_0/POSTGRES.html","","<p>PostgreSQL Database Management System (formerly known as Postgres, then as\nPostgres95)\n<p>Portions Copyright …\n"],["README-OS_X","","th-pg-include/gems/pg-1_0_0/README-OS_X_rdoc.html","","<p>Compiling on MacOS X\n<p>The EnterpriseDB packages are the recommended PostgreSQL installations to\nuse with …\n"],["README-Windows","","th-pg-include/gems/pg-1_0_0/README-Windows_rdoc.html","","<p>Compiling &#39;pg&#39; on MS Windows\n<p>In order to build this extension on MS Windows you will need a couple …\n"],["README.ja","","th-pg-include/gems/pg-1_0_0/README_ja_rdoc.html","","<p>pg\n<p>home  &mdash; bitbucket.org/ged/ruby-pg\n<p>mirror  &mdash; github.com/ged/ruby-pg\n"],["README","","th-pg-include/gems/pg-1_0_0/README_rdoc.html","","<p>pg\n<p>home  &mdash; bitbucket.org/ged/ruby-pg\n<p>mirror  &mdash; github.com/ged/ruby-pg\n"],["Rakefile","","th-pg-include/gems/pg-1_0_0/Rakefile.html","","<p>#!/usr/bin/env rake\n<p>require &#39;rbconfig&#39; require &#39;pathname&#39; require\n&#39;tmpdir&#39;\n<p>begin …\n"],["Rakefile.cross","","th-pg-include/gems/pg-1_0_0/Rakefile_cross.html","","<p>#!/usr/bin/env rake\n<p>require &#39;uri&#39; require &#39;tempfile&#39; require &#39;rbconfig&#39;\nrequire …\n"],["errorcodes.def","","th-pg-include/gems/pg-1_0_0/ext/errorcodes_def.html","","\n<pre>ext/errorcodes.def - Definition of error classes.\n\nWARNING: This file is autogenerated. Please edit ext/errorcodes.rb ...</pre>\n"],["errorcodes","","th-pg-include/gems/pg-1_0_0/ext/errorcodes_txt.html","","<p># # errcodes.txt #      PostgreSQL error codes # # Copyright © 2003-2017,\nPostgreSQL Global Development …\n"],["pg.sln","","th-pg-include/gems/pg-1_0_0/ext/vc/pg_sln.html","","<p>Microsoft Visual Studio Solution File, Format Version 10.00 # Visual Studio\n2008 Project(“{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}”) …\n"],["pg.vcproj","","th-pg-include/gems/pg-1_0_0/ext/vc/pg_18/pg_vcproj.html","","<p>&lt;?xml version=“1.0” encoding=“Windows-1252”?&gt; &lt;VisualStudioProject\n\n<pre>ProjectType=&quot;Visual ...</pre>\n"],["pg_19.vcproj","","th-pg-include/gems/pg-1_0_0/ext/vc/pg_19/pg_19_vcproj.html","","<p>&lt;?xml version=“1.0” encoding=“Windows-1252”?&gt; &lt;VisualStudioProject\n\n<pre>ProjectType=&quot;Visual ...</pre>\n"],["expected_trace.out","","th-pg-include/gems/pg-1_0_0/spec/data/expected_trace_out.html","","<p>To backend&gt; Msg Q To backend&gt; “SELECT 1 AS one” To backend&gt; Msg\ncomplete, length 21 …\n"],["restart","","tmp/restart_txt.html","",""]]}}